{"mappings":"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","sources":["<anon>","js/pokedex-pokemon.js"],"sourcesContent":["var $74e1dc5251653d5e$exports = {};\nwindow.PokedexPokemonPanel = PokedexResultPanel.extend({\n    initialize: function(id) {\n        id = toID(id);\n        var pokemon = BattlePokedex[id];\n        this.id = id;\n        this.shortTitle = pokemon.baseSpecies;\n        var buf = '<div class=\"pfx-body dexentry\">';\n        buf += `<a href=\"${Config.baseurl}\" class=\"pfx-backbutton\" data-target=\"back\"><i class=\"fa fa-chevron-left\"></i> Pok&eacute;dex</a>`;\n        buf += \"<h1>\";\n        if (pokemon.forme) buf += `<a href=\"${Config.baseurl}pokemon/${id}\" data-target=\"push\" class=\"subtle\">${pokemon.baseSpecies}<small>-${pokemon.forme}</small></a>`;\n        else buf += `<a href=\"${Config.baseurl}pokemon/${id}\" data-target=\"push\" class=\"subtle\">${pokemon.name}</a>`;\n        if (pokemon.num > 0) buf += ` <code>#${pokemon.num}</code>`;\n        buf += \"</h1>\";\n        if (pokemon.unusable) buf += '<div class=\"warning\"><strong>Note:</strong> This Pok&eacute;mon is not available.</div>';\n        buf += `<img src=\"${ResourcePrefix}sprites/gen5/${id}.png\" alt=\"\" width=\"96\" height=\"96\" class=\"sprite\" />`;\n        buf += '<dl class=\"typeentry\">';\n        buf += \"<dt>Types:</dt> <dd>\";\n        for(var i = 0; i < pokemon.types.length; i++)buf += `<a class=\"type ${toID(pokemon.types[i])}\" href=\"${Config.baseurl}types/${toID(pokemon.types[i])}\" data-target=\"push\">${pokemon.types[i]}</a> `;\n        buf += \"</dd>\";\n        buf += \"</dl>\";\n        buf += '<dl class=\"sizeentry\">';\n        buf += \"<dt>Size:</dt> <dd>\";\n        var gkPower = function(weightkg) {\n            if (weightkg >= 200) return 120;\n            if (weightkg >= 100) return 100;\n            if (weightkg >= 50) return 80;\n            if (weightkg >= 25) return 60;\n            if (weightkg >= 10) return 40;\n            return 20;\n        }(pokemon.weightkg);\n        buf += `${pokemon.heightm} m, ${pokemon.weightkg} kg<br /><small><a class=\"subtle\" href=\"${Config.baseurl}moves/grassknot\" data-target=\"push\">Grass Knot</a>: ${gkPower}</small>`;\n        buf += \"</dd>\";\n        buf += \"</dl>\";\n        buf += '<dl class=\"abilityentry\">';\n        buf += '<dt>Abilities:</dt> <dd class=\"imgentry\">';\n        for(var i in pokemon.abilities){\n            var ability = pokemon.abilities[i];\n            if (!ability) continue;\n            if (i !== \"0\") buf += \" | \";\n            if (i === \"H\") ability = `<em>${pokemon.abilities[i]}</em>`;\n            buf += `<a href=\"${Config.baseurl}abilities/${toID(pokemon.abilities[i])}\" data-target=\"push\">${ability}</a>`;\n            if (i === \"H\") buf += \"<small> (H)</small>\";\n            if (i === \"S\") buf += \"<small> (special)</small>\";\n        }\n        buf += \"</dd>\";\n        buf += \"</dl>\";\n        buf += \"<dl>\";\n        buf += '<dt style=\"clear:left\">Base stats:</dt><dd><table class=\"stats\">';\n        var StatTitles = {\n            hp: \"HP\",\n            atk: \"Attack\",\n            def: \"Defense\",\n            spa: \"Sp. Atk\",\n            spd: \"Sp. Def\",\n            spe: \"Speed\"\n        };\n        buf += '<tr><td></td><td></td><td style=\"width:200px\"></td><th class=\"ministat\"><abbr title=\"0 IVs, 0 EVs, negative nature\">min&minus;</a></th><th class=\"ministat\"><abbr title=\"31 IVs, 0 EVs, neutral nature\">min</abbr></th><th class=\"ministat\"><abbr title=\"31 IVs, 252 EVs, neutral nature\">max</abbr></th><th class=\"ministat\"><abbr title=\"31 IVs, 252 EVs, positive nature\">max+</abbr></th>';\n        var bst = 0;\n        for(var stat in BattleStatNames){\n            var baseStat = pokemon.baseStats[stat];\n            bst += baseStat;\n            var width = Math.floor(baseStat * 200 / 200);\n            if (width > 200) width = 200;\n            var color = Math.floor(baseStat * 180 / 255);\n            if (color > 360) color = 360;\n            buf += `<tr><th>${StatTitles[stat]}:</th><td class=\"stat\">${baseStat}</td>`;\n            buf += `<td class=\"statbar\"><span style=\"width:${Math.floor(width)}px;background:hsl(${color},85%,45%);border-color:hsl(${color},75%,35%)\"></span></td>`;\n            buf += '<td class=\"ministat\"><small>' + (stat === \"hp\" ? \"\" : this.getStat(baseStat, false, 100, 0, 0, 0.9)) + '</small></td><td class=\"ministat\"><small>' + this.getStat(baseStat, stat === \"hp\", 100, 31, 0, 1.0) + \"</small></td>\";\n            buf += '<td class=\"ministat\"><small>' + this.getStat(baseStat, stat === \"hp\", 100, 31, 255, 1.0) + '</small></td><td class=\"ministat\"><small>' + (stat === \"hp\" ? \"\" : this.getStat(baseStat, false, 100, 31, 255, 1.1)) + \"</small></td></tr>\";\n        }\n        buf += `<tr><th class=\"bst\">Total:</th><td class=\"bst\">${bst}</td><td></td><td class=\"ministat\" colspan=\"4\">at level <input type=\"text\" class=\"textbox\" name=\"level\" placeholder=\"100\" size=\"5\" /></td>`;\n        buf += \"</table></dd>\";\n        buf += \"<dt>Evolution:</dt> <dd>\";\n        var template = pokemon;\n        while(template.prevo)template = getID(BattlePokedex, template.prevo);\n        if (template.evos) {\n            buf += '<table class=\"evos\"><tr><td>';\n            var evos = [\n                template\n            ];\n            while(evos.length > 0){\n                var nextEvos = [];\n                for(var i = 0; i < evos.length; i++){\n                    template = evos[i];\n                    var name = template.forme ? template.baseSpecies + `<small>-${template.forme}</small>` : template.name;\n                    name = `<span class=\"picon\" style=\"${getPokemonIcon(template)}\"></span>` + name;\n                    if (template === pokemon) buf += `<div><strong>${name}</strong></div>`;\n                    else buf += `<div><a href=\"${Config.baseurl}pokemon/${template.id}\" data-target=\"replace\">${name}</a></div>`;\n                    for (let evo of template.evos ?? [])if (!nextEvos.find((e)=>e.target == evo.target)) nextEvos.push(evo);\n                }\n                evos = nextEvos.map((evo)=>getID(BattlePokedex, evo.target));\n                if (evos.length > 0) buf += '</td><td class=\"arrow\"><span>&rarr;</span></td><td>';\n            }\n            buf += \"</td></tr></table>\";\n            if (pokemon.prevo) {\n                let prevo = getID(BattlePokedex, pokemon.prevo);\n                let evos_from_prevo = prevo.evos.filter((evo)=>toID(evo.target) == pokemon.id);\n                for (let evo of evos_from_prevo)buf += `<div><small>Evolves from ${getID(BattlePokedex, pokemon.prevo).name} (${this.getEvoMethod(evo)})</small></div>`;\n            }\n            let a = [];\n            if (pokemon.evos) for (let evo of pokemon.evos)buf += `<div><small>Evolves into ${getID(BattlePokedex, evo.target).name} (${this.getEvoMethod(evo)})</small></div>`;\n        } else buf += \"<em>Does not evolve</em>\";\n        if (pokemon.formes) {\n            buf += \"</dd><dt>Formes:</dt> <dd>\";\n            var otherFormes = pokemon.formes;\n            for(var i = 0; i < otherFormes.length; i++){\n                template = getID(BattlePokedex, otherFormes[i]);\n                if (!template) continue;\n                var name = template.forme || \"Base\";\n                name = `<span class=\"picon\" style=\"${getPokemonIcon(template)}\"></span>` + name;\n                if (i > 0) buf += \", \";\n                if (template === pokemon) buf += `<strong>${name}</strong>`;\n                else buf += `<a href=\"${Config.baseurl}pokemon/${template.id}\" data-target=\"replace\">${name}</a>`;\n            }\n            if (pokemon.requiredItem) buf += `<div><small>Must hold <a href=\"${Config.baseurl}items/${toID(template.requiredItem)}\" data-target=\"push\">${template.requiredItem}</a></small></div>`;\n        }\n        if (pokemon.cosmeticFormes) {\n            buf += \"</dd><dt>Cosmetic formes:</dt> <dd>\";\n            name = `<span class=\"picon\" style=\"${getPokemonIcon(pokemon)}\"></span>` + (pokemon.forme ?? \"Base\");\n            buf += \"\" + name;\n            for(var i = 0; i < pokemon.cosmeticFormes.length; i++){\n                name = `<span class=\"picon\" style=\"${getPokemonIcon(pokemon.baseSpecies + \"-\" + pokemon.cosmeticFormes[i])}\"></span>` + pokemon.cosmeticFormes[i];\n                buf += \",\" + name;\n            }\n        }\n        buf += \"</dd></dl>\";\n        if (pokemon.eggGroups) {\n            buf += '<dl class=\"colentry\"><dt>Egg groups:</dt><dd><span class=\"picon\" style=\"margin-top:-12px;' + getPokemonIcon(\"egg\") + `\"></span><a href=\"${Config.baseurl}egggroups/` + pokemon.eggGroups.map(toID).join(\"+\") + '\" data-target=\"push\">' + pokemon.eggGroups.join(\", \") + \"</a></dd></dl>\";\n            buf += '<dl class=\"colentry\"><dt>Gender ratio:</dt><dd>';\n            if (pokemon.gender) switch(pokemon.gender){\n                case \"M\":\n                    buf += \"100% male\";\n                    break;\n                case \"F\":\n                    buf += \"100% female\";\n                    break;\n                case \"N\":\n                    buf += \"100% genderless\";\n                    break;\n            }\n            else if (pokemon.genderRatio) buf += `${pokemon.genderRatio.M * 100}% male, ${pokemon.genderRatio.F * 100}% female`;\n            else buf += \"50% male, 50% female\";\n            buf += \"</dd></dl>\";\n            buf += '<div style=\"clear:left\"></div>';\n        }\n        // learnset\n        buf += '<ul class=\"utilichart nokbd\">';\n        buf += '<li class=\"resultheader\"><h3>Level-up</h3></li>';\n        buf += \"</ul>\";\n        buf += \"</div>\";\n        this.html(buf);\n        setTimeout(this.renderFullLearnset.bind(this));\n    },\n    events: {\n        \"click .tabbar button\": \"selectTab\",\n        \"input input[name=level]\": \"updateLevel\",\n        \"keyup input[name=level]\": \"updateLevel\",\n        \"change input[name=level]\": \"updateLevel\"\n    },\n    updateLevel: function(e) {\n        var val = this.$(\"input[name=level]\").val();\n        var level = val === \"\" ? 100 : parseInt(val, 10);\n        var lowIV = 31, highIV = 31;\n        var lowEV = 0, highEV = 255;\n        if (val.slice(-1) === \":\") {\n            lowIV = 0;\n            highEV = 0;\n        }\n        var i = 0;\n        var $entries = this.$(\"table.stats td.ministat small\");\n        var pokemon = getID(BattlePokedex, this.id);\n        for(var stat in BattleStatNames){\n            var baseStat = pokemon.baseStats[stat];\n            $entries.eq(4 * i + 0).text(stat === \"hp\" ? \"\" : this.getStat(baseStat, false, level, 0, 0, 0.9));\n            $entries.eq(4 * i + 1).text(this.getStat(baseStat, stat === \"hp\", level, lowIV, lowEV, 1.0));\n            $entries.eq(4 * i + 2).text(this.getStat(baseStat, stat === \"hp\", level, highIV, highEV, 1.0));\n            $entries.eq(4 * i + 3).text(stat === \"hp\" ? \"\" : this.getStat(baseStat, false, level, highIV, highEV, 1.1));\n            i++;\n        }\n    },\n    getEvoMethod: function(evo) {\n        switch(evo.condition){\n            case undefined:\n                if (evo.level) return \"level \" + evo.level;\n                if (evo.item) return \"use \" + evo.item;\n                return \"unknown\";\n            case \"trade\":\n                return \"When traded\";\n            case \"friendship\":\n                return \"High Friendship\";\n            default:\n                return evo.condition;\n        }\n    },\n    selectTab: function(e) {\n        this.$(\".tabbar button\").removeClass(\"cur\");\n        $(e.currentTarget).addClass(\"cur\");\n        switch(e.currentTarget.value){\n            case \"move\":\n                this.renderFullLearnset();\n                break;\n            case \"details\":\n                break;\n            case \"events\":\n                break;\n        }\n    },\n    renderFullLearnset: function() {\n        var pokemon = getID(BattlePokedex, this.id);\n        var learnset = getLearnset(this.id);\n        var last;\n        var buf = \"\", desc = \"\";\n        for (let learn of learnset){\n            let move = BattleMovedex[learn.move];\n            if (!move) {\n                buf += `<li><pre>error: \"${learn.move}\"</pre></li>`;\n                continue;\n            }\n            var newCategory = last == undefined || last.how != learn.how;\n            switch(learn.how){\n                case \"lvl\":\n                    if (newCategory) buf += '<li class=\"resultheader\"><h3>Level-up</h3></li>';\n                    let level = learn.level;\n                    if (level == 0) desc = \"<small>Evo</small>\";\n                    if (level == 1) desc = \"-\";\n                    if (level > 1) desc = `<small>L</small>${level}`;\n                    break;\n                case \"prevo\":\n                    if (newCategory) buf += '<li class=\"resultheader\"><h3>From preevo</h3></li>';\n                    desc = \"\";\n                    break;\n                case \"tm\":\n                    if (newCategory) buf += '<li class=\"resultheader\"><h3>TM/HM</h3></li>';\n                    desc = `<span class=\"itemicon\" style=\"margin-top:-3px;${getItemIcon(\"tr01\")}\"></span>`;\n                    break;\n                case \"tutor\":\n                    if (newCategory) buf += '<li class=\"resultheader\"><h3>Tutor</h3></li>';\n                    desc = `<img src=\"${ResourcePrefix}sprites/tutor.png\" style=\"margin-top:-4px;opacity:.7\" width=\"27\" height=\"26\" alt=\"T\" />`;\n                    break;\n                case \"egg\":\n                    if (newCategory) buf += '<li class=\"resultheader\"><h3>Egg</h3></li>';\n                    desc = '<span class=\"picon\" style=\"margin-top:-12px;' + getPokemonIcon(\"egg\") + '\"></span>';\n                    break;\n            }\n            last = learn;\n            buf += BattleSearch.renderTaggedMoveRow(move, desc);\n        }\n        this.$(\".utilichart\").html(buf);\n    },\n    getStat: function(baseStat, isHP, level, iv, ev, natureMult) {\n        if (isHP) {\n            if (baseStat === 1) return 1;\n            return Math.floor(Math.floor(2 * baseStat + (iv || 0) + Math.floor((ev || 0) / 4) + 100) * level / 100 + 10);\n        }\n        var val = Math.floor(Math.floor(2 * baseStat + (iv || 0) + Math.floor((ev || 0) / 4)) * level / 100 + 5);\n        if (natureMult && !isHP) val *= natureMult;\n        return Math.floor(val);\n    }\n});\n\n\n//# sourceMappingURL=index.3476b31f.js.map\n","window.PokedexPokemonPanel = PokedexResultPanel.extend({\n  initialize: function (id) {\n    id = toID(id);\n    var pokemon = BattlePokedex[id];\n    this.id = id;\n    this.shortTitle = pokemon.baseSpecies;\n\n    var buf = '<div class=\"pfx-body dexentry\">';\n\n    buf += `<a href=\"${Config.baseurl}\" class=\"pfx-backbutton\" data-target=\"back\"><i class=\"fa fa-chevron-left\"></i> Pok&eacute;dex</a>`;\n    buf += \"<h1>\";\n    if (pokemon.forme) {\n      buf += `<a href=\"${Config.baseurl}pokemon/${id}\" data-target=\"push\" class=\"subtle\">${pokemon.baseSpecies}<small>-${pokemon.forme}</small></a>`;\n    } else {\n      buf += `<a href=\"${Config.baseurl}pokemon/${id}\" data-target=\"push\" class=\"subtle\">${pokemon.name}</a>`;\n    }\n    if (pokemon.num > 0) buf += ` <code>#${pokemon.num}</code>`;\n    buf += \"</h1>\";\n\n    if (pokemon.unusable) {\n      buf += '<div class=\"warning\"><strong>Note:</strong> This Pok&eacute;mon is not available.</div>';\n    }\n\n    buf += `<img src=\"${ResourcePrefix}sprites/gen5/${id}.png\" alt=\"\" width=\"96\" height=\"96\" class=\"sprite\" />`;\n\n    buf += '<dl class=\"typeentry\">';\n    buf += \"<dt>Types:</dt> <dd>\";\n    for (var i = 0; i < pokemon.types.length; i++) {\n      buf += `<a class=\"type ${toID(pokemon.types[i])}\" href=\"${Config.baseurl}types/${toID(pokemon.types[i])}\" data-target=\"push\">${pokemon.types[i]}</a> `;\n    }\n    buf += \"</dd>\";\n    buf += \"</dl>\";\n\n    buf += '<dl class=\"sizeentry\">';\n    buf += \"<dt>Size:</dt> <dd>\";\n    var gkPower = (function (weightkg) {\n      if (weightkg >= 200) return 120;\n      if (weightkg >= 100) return 100;\n      if (weightkg >= 50) return 80;\n      if (weightkg >= 25) return 60;\n      if (weightkg >= 10) return 40;\n      return 20;\n    })(pokemon.weightkg);\n    buf += `${pokemon.heightm} m, ${pokemon.weightkg} kg<br /><small><a class=\"subtle\" href=\"${Config.baseurl}moves/grassknot\" data-target=\"push\">Grass Knot</a>: ${gkPower}</small>`;\n    buf += \"</dd>\";\n    buf += \"</dl>\";\n\n    buf += '<dl class=\"abilityentry\">';\n    buf += '<dt>Abilities:</dt> <dd class=\"imgentry\">';\n    for (var i in pokemon.abilities) {\n      var ability = pokemon.abilities[i];\n      if (!ability) continue;\n\n      if (i !== \"0\") buf += \" | \";\n      if (i === \"H\") ability = `<em>${pokemon.abilities[i]}</em>`;\n      buf += `<a href=\"${Config.baseurl}abilities/${toID(pokemon.abilities[i])}\" data-target=\"push\">${ability}</a>`;\n      if (i === \"H\") buf += \"<small> (H)</small>\";\n      if (i === \"S\") buf += \"<small> (special)</small>\";\n    }\n    buf += \"</dd>\";\n    buf += \"</dl>\";\n\n    buf += \"<dl>\";\n    buf += '<dt style=\"clear:left\">Base stats:</dt><dd><table class=\"stats\">';\n\n    var StatTitles = {\n      hp: \"HP\",\n      atk: \"Attack\",\n      def: \"Defense\",\n      spa: \"Sp. Atk\",\n      spd: \"Sp. Def\",\n      spe: \"Speed\",\n    };\n    buf +=\n      '<tr><td></td><td></td><td style=\"width:200px\"></td><th class=\"ministat\"><abbr title=\"0 IVs, 0 EVs, negative nature\">min&minus;</a></th><th class=\"ministat\"><abbr title=\"31 IVs, 0 EVs, neutral nature\">min</abbr></th><th class=\"ministat\"><abbr title=\"31 IVs, 252 EVs, neutral nature\">max</abbr></th><th class=\"ministat\"><abbr title=\"31 IVs, 252 EVs, positive nature\">max+</abbr></th>';\n    var bst = 0;\n    for (var stat in BattleStatNames) {\n      var baseStat = pokemon.baseStats[stat];\n      bst += baseStat;\n      var width = Math.floor((baseStat * 200) / 200);\n      if (width > 200) width = 200;\n      var color = Math.floor((baseStat * 180) / 255);\n      if (color > 360) color = 360;\n      buf += `<tr><th>${StatTitles[stat]}:</th><td class=\"stat\">${baseStat}</td>`;\n      buf += `<td class=\"statbar\"><span style=\"width:${Math.floor(width)}px;background:hsl(${color},85%,45%);border-color:hsl(${color},75%,35%)\"></span></td>`;\n      buf +=\n        '<td class=\"ministat\"><small>' +\n        (stat === \"hp\" ? \"\" : this.getStat(baseStat, false, 100, 0, 0, 0.9)) +\n        '</small></td><td class=\"ministat\"><small>' +\n        this.getStat(baseStat, stat === \"hp\", 100, 31, 0, 1.0) +\n        \"</small></td>\";\n      buf +=\n        '<td class=\"ministat\"><small>' +\n        this.getStat(baseStat, stat === \"hp\", 100, 31, 255, 1.0) +\n        '</small></td><td class=\"ministat\"><small>' +\n        (stat === \"hp\" ? \"\" : this.getStat(baseStat, false, 100, 31, 255, 1.1)) +\n        \"</small></td></tr>\";\n    }\n    buf += `<tr><th class=\"bst\">Total:</th><td class=\"bst\">${bst}</td><td></td><td class=\"ministat\" colspan=\"4\">at level <input type=\"text\" class=\"textbox\" name=\"level\" placeholder=\"100\" size=\"5\" /></td>`;\n\n    buf += \"</table></dd>\";\n\n    {\n      buf += \"<dt>Evolution:</dt> <dd>\";\n      var template = pokemon;\n      while (template.prevo) template = getID(BattlePokedex, template.prevo);\n      if (template.evos) {\n        buf += '<table class=\"evos\"><tr><td>';\n        var evos = [template];\n        while (evos.length > 0) {\n          var nextEvos = [];\n          for (var i = 0; i < evos.length; i++) {\n            template = evos[i];\n            var name = template.forme ? template.baseSpecies + `<small>-${template.forme}</small>` : template.name;\n            name = `<span class=\"picon\" style=\"${getPokemonIcon(template)}\"></span>` + name;\n            if (template === pokemon) {\n              buf += `<div><strong>${name}</strong></div>`;\n            } else {\n              buf += `<div><a href=\"${Config.baseurl}pokemon/${template.id}\" data-target=\"replace\">${name}</a></div>`;\n            }\n            for (let evo of template.evos ?? []) {\n              if (!nextEvos.find((e) => e.target == evo.target)) {\n                nextEvos.push(evo);\n              }\n            }\n          }\n          evos = nextEvos.map((evo) => getID(BattlePokedex, evo.target));\n          if (evos.length > 0) buf += '</td><td class=\"arrow\"><span>&rarr;</span></td><td>';\n        }\n        buf += \"</td></tr></table>\";\n\n        if (pokemon.prevo) {\n          let prevo = getID(BattlePokedex, pokemon.prevo);\n          let evos_from_prevo = prevo.evos.filter((evo) => toID(evo.target) == pokemon.id);\n          for (let evo of evos_from_prevo) {\n            buf += `<div><small>Evolves from ${getID(BattlePokedex, pokemon.prevo).name} (${this.getEvoMethod(evo)})</small></div>`;\n          }\n        }\n\n        let a = [];\n        if (pokemon.evos) {\n          for (let evo of pokemon.evos) {\n            buf += `<div><small>Evolves into ${getID(BattlePokedex, evo.target).name} (${this.getEvoMethod(evo)})</small></div>`;\n          }\n        }\n      } else {\n        buf += \"<em>Does not evolve</em>\";\n      }\n    }\n\n    if (pokemon.formes) {\n      buf += \"</dd><dt>Formes:</dt> <dd>\";\n      var otherFormes = pokemon.formes;\n      for (var i = 0; i < otherFormes.length; i++) {\n        template = getID(BattlePokedex, otherFormes[i]);\n        if (!template) continue;\n        var name = template.forme || \"Base\";\n        name = `<span class=\"picon\" style=\"${getPokemonIcon(template)}\"></span>` + name;\n        if (i > 0) buf += \", \";\n        if (template === pokemon) {\n          buf += `<strong>${name}</strong>`;\n        } else {\n          buf += `<a href=\"${Config.baseurl}pokemon/${template.id}\" data-target=\"replace\">${name}</a>`;\n        }\n      }\n      if (pokemon.requiredItem) {\n        buf += `<div><small>Must hold <a href=\"${Config.baseurl}items/${toID(template.requiredItem)}\" data-target=\"push\">${template.requiredItem}</a></small></div>`;\n      }\n    }\n    if (pokemon.cosmeticFormes) {\n      buf += \"</dd><dt>Cosmetic formes:</dt> <dd>\";\n      name = `<span class=\"picon\" style=\"${getPokemonIcon(pokemon)}\"></span>` + (pokemon.forme ?? \"Base\");\n      buf += \"\" + name;\n\n      for (var i = 0; i < pokemon.cosmeticFormes.length; i++) {\n        name =\n          `<span class=\"picon\" style=\"${getPokemonIcon(pokemon.baseSpecies + \"-\" + pokemon.cosmeticFormes[i])}\"></span>` +\n          pokemon.cosmeticFormes[i];\n        buf += \",\" + name;\n      }\n    }\n    buf += \"</dd></dl>\";\n\n    if (pokemon.eggGroups) {\n      buf +=\n        '<dl class=\"colentry\"><dt>Egg groups:</dt><dd><span class=\"picon\" style=\"margin-top:-12px;' +\n        getPokemonIcon(\"egg\") +\n        `\"></span><a href=\"${Config.baseurl}egggroups/` +\n        pokemon.eggGroups.map(toID).join(\"+\") +\n        '\" data-target=\"push\">' +\n        pokemon.eggGroups.join(\", \") +\n        \"</a></dd></dl>\";\n      buf += '<dl class=\"colentry\"><dt>Gender ratio:</dt><dd>';\n      if (pokemon.gender)\n        switch (pokemon.gender) {\n          case \"M\":\n            buf += \"100% male\";\n            break;\n          case \"F\":\n            buf += \"100% female\";\n            break;\n          case \"N\":\n            buf += \"100% genderless\";\n            break;\n        }\n      else if (pokemon.genderRatio) {\n        buf += `${pokemon.genderRatio.M * 100}% male, ${pokemon.genderRatio.F * 100}% female`;\n      } else {\n        buf += \"50% male, 50% female\";\n      }\n      buf += \"</dd></dl>\";\n      buf += '<div style=\"clear:left\"></div>';\n    }\n\n    // learnset\n    buf += '<ul class=\"utilichart nokbd\">';\n    buf += '<li class=\"resultheader\"><h3>Level-up</h3></li>';\n    buf += \"</ul>\";\n    buf += \"</div>\";\n\n    this.html(buf);\n    setTimeout(this.renderFullLearnset.bind(this));\n  },\n  events: {\n    \"click .tabbar button\": \"selectTab\",\n    \"input input[name=level]\": \"updateLevel\",\n    \"keyup input[name=level]\": \"updateLevel\",\n    \"change input[name=level]\": \"updateLevel\",\n  },\n  updateLevel: function (e) {\n    var val = this.$(\"input[name=level]\").val();\n    var level = val === \"\" ? 100 : parseInt(val, 10);\n    var lowIV = 31,\n      highIV = 31;\n    var lowEV = 0,\n      highEV = 255;\n    if (val.slice(-1) === \":\") {\n      lowIV = 0;\n      highEV = 0;\n    }\n    var i = 0;\n    var $entries = this.$(\"table.stats td.ministat small\");\n    var pokemon = getID(BattlePokedex, this.id);\n    for (var stat in BattleStatNames) {\n      var baseStat = pokemon.baseStats[stat];\n\n      $entries.eq(4 * i + 0).text(stat === \"hp\" ? \"\" : this.getStat(baseStat, false, level, 0, 0, 0.9));\n      $entries.eq(4 * i + 1).text(this.getStat(baseStat, stat === \"hp\", level, lowIV, lowEV, 1.0));\n      $entries.eq(4 * i + 2).text(this.getStat(baseStat, stat === \"hp\", level, highIV, highEV, 1.0));\n      $entries.eq(4 * i + 3).text(stat === \"hp\" ? \"\" : this.getStat(baseStat, false, level, highIV, highEV, 1.1));\n      i++;\n    }\n  },\n  getEvoMethod: function (evo) {\n    switch (evo.condition) {\n      case undefined:\n        if (evo.level) {\n          return \"level \" + evo.level;\n        }\n        if (evo.item) {\n          return \"use \" + evo.item;\n        }\n        return \"unknown\";\n      case \"trade\":\n        return \"When traded\";\n      case \"friendship\":\n        return \"High Friendship\";\n      default:\n        return evo.condition;\n    }\n  },\n  selectTab: function (e) {\n    this.$(\".tabbar button\").removeClass(\"cur\");\n    $(e.currentTarget).addClass(\"cur\");\n    switch (e.currentTarget.value) {\n      case \"move\":\n        this.renderFullLearnset();\n        break;\n      case \"details\":\n        //this.renderDetails();\n        break;\n      case \"events\":\n        //this.renderEvents();\n        break;\n    }\n  },\n  renderFullLearnset: function () {\n    var pokemon = getID(BattlePokedex, this.id);\n    var learnset = getLearnset(this.id);\n    var last;\n    var buf = \"\",\n      desc = \"\";\n    for (let learn of learnset) {\n      let move = BattleMovedex[learn.move];\n      if (!move) {\n        buf += `<li><pre>error: \"${learn.move}\"</pre></li>`;\n        continue;\n      }\n      var newCategory = last == undefined || last.how != learn.how;\n      switch (learn.how) {\n        case \"lvl\": // level-up move\n          if (newCategory) buf += '<li class=\"resultheader\"><h3>Level-up</h3></li>';\n          let level = learn.level;\n          if (level == 0) desc = \"<small>Evo</small>\";\n          if (level == 1) desc = \"-\";\n          if (level > 1) desc = `<small>L</small>${level}`\n          break;\n        case \"prevo\": // prevo\n          if (newCategory) buf += '<li class=\"resultheader\"><h3>From preevo</h3></li>';\n          desc = \"\";\n          break;\n        case \"tm\": // tm/hm\n          if (newCategory) buf += '<li class=\"resultheader\"><h3>TM/HM</h3></li>';\n          desc = `<span class=\"itemicon\" style=\"margin-top:-3px;${getItemIcon(\"tr01\")}\"></span>`;\n          break;\n        case \"tutor\": // tutor\n          if (newCategory) buf += '<li class=\"resultheader\"><h3>Tutor</h3></li>';\n          desc = `<img src=\"${ResourcePrefix}sprites/tutor.png\" style=\"margin-top:-4px;opacity:.7\" width=\"27\" height=\"26\" alt=\"T\" />`;\n          break;\n        case \"egg\": // egg move\n          if (newCategory) buf += '<li class=\"resultheader\"><h3>Egg</h3></li>';\n          desc = '<span class=\"picon\" style=\"margin-top:-12px;' + getPokemonIcon(\"egg\") + '\"></span>';\n          break;\n      }\n      last = learn;\n      buf += BattleSearch.renderTaggedMoveRow(move, desc);\n    }\n    this.$(\".utilichart\").html(buf);\n  },\n  getStat: function (baseStat, isHP, level, iv, ev, natureMult) {\n    if (isHP) {\n      if (baseStat === 1) return 1;\n      return Math.floor((Math.floor(2 * baseStat + (iv || 0) + Math.floor((ev || 0) / 4) + 100) * level) / 100 + 10);\n    }\n    var val = Math.floor((Math.floor(2 * baseStat + (iv || 0) + Math.floor((ev || 0) / 4)) * level) / 100 + 5);\n    if (natureMult && !isHP) val *= natureMult;\n    return Math.floor(val);\n  },\n});\n"],"names":["window","PokedexPokemonPanel","PokedexResultPanel","extend","initialize","id","toID","weightkg","pokemon","BattlePokedex","shortTitle","baseSpecies","buf","Config","baseurl","forme","name","num","unusable","ResourcePrefix","i","types","length","gkPower","heightm","abilities","ability","StatTitles","hp","atk","def","spa","spd","spe","bst","stat","BattleStatNames","baseStat","baseStats","width","Math","floor","color","getStat","template","prevo","getID","evos","nextEvos","evo","getPokemonIcon","find","e","target","push","map","filter","getEvoMethod","formes","otherFormes","requiredItem","cosmeticFormes","eggGroups","join","gender","genderRatio","M","F","html","setTimeout","renderFullLearnset","bind","events","updateLevel","val","$","level","parseInt","lowIV","highEV","slice","$entries","eq","text","condition","undefined","item","selectTab","removeClass","currentTarget","addClass","value","last","learnset","getLearnset","desc","learn","move","BattleMovedex","newCategory","how","getItemIcon","BattleSearch","renderTaggedMoveRow","isHP","iv","ev","natureMult"],"version":3,"file":"index.3476b31f.js.map"}