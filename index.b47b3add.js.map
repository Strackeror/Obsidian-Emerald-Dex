{"mappings":"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","sources":["<anon>","js/pokedex-moves.js"],"sourcesContent":["var $3371b43161c9d506$exports = {};\nwindow.PokedexMovePanel = PokedexResultPanel.extend({\n    initialize: function(id) {\n        id = toID(id);\n        var move = getID(BattleMovedex, id);\n        this.id = id;\n        this.shortTitle = move.name;\n        var buf = '<div class=\"pfx-body dexentry\">';\n        buf += '<a href=\"' + Config.baseurl + '\" class=\"pfx-backbutton\" data-target=\"back\"><i class=\"fa fa-chevron-left\"></i> Pok&eacute;dex</a>';\n        buf += '<h1><a href=\"' + Config.baseurl + \"moves/\" + id + '\" data-target=\"push\" class=\"subtle\">' + move.name + \"</a></h1>\";\n        if (move.id === \"magikarpsrevenge\") buf += '<div class=\"warning\"><strong>Note:</strong> Made for testing on Pok&eacute;mon Showdown, not a real move.</div>';\n        else if (move.isNonstandard) {\n            buf += '<div class=\"warning\"><strong>Note:</strong> ';\n            switch(move.isNonstandard){\n                case \"Past\":\n                    buf += \"This move is only available in past generations.\";\n                    break;\n                case \"Future\":\n                    buf += \"This move is only available in future generations.\";\n                    break;\n                case \"Unobtainable\":\n                    if (move.isMax) buf += \"This move can't be learned normally, it can only be used by \" + (move.isMax === true ? \"Dynamaxing\" : \"Gigantamaxing\") + \".\";\n                    else if (move.isZ) buf += \"This move can't be learned normally, it can only be used with a Z-Crystal.\";\n                    else buf += \"This move can't be learned normally.\";\n                    break;\n                case \"CAP\":\n                    buf += 'This is a made-up move by <a href=\"http://www.smogon.com/cap/\" target=\"_blank\">Smogon CAP</a>.';\n                    break;\n                case \"LGPE\":\n                    buf += \"This move is only available in Let's Go! Pikachu and Eevee.\";\n                    break;\n                case \"Custom\":\n                    buf += \"This is a custom move, not available during normal gameplay.\";\n                    break;\n            }\n            buf += \"</div>\";\n        }\n        buf += '<dl class=\"movetypeentry\">';\n        buf += \"<dt>Type:</dt> <dd>\";\n        buf += '<a class=\"type ' + toID(move.type) + '\" href=\"' + Config.baseurl + \"types/\" + toID(move.type) + '\" data-target=\"push\">' + move.type + \"</a> \";\n        buf += '<a class=\"type ' + toID(move.category) + '\" href=\"' + Config.baseurl + \"categories/\" + toID(move.category) + '\" data-target=\"push\">' + move.category + \"</a>\";\n        buf += \"</dd></dl>\";\n        if (move.category !== \"Status\") buf += '<dl class=\"powerentry\"><dt>Base power:</dt> <dd><strong>' + (move.basePower || \"&mdash;\") + \"</strong></dd></dl>\";\n        buf += '<dl class=\"accuracyentry\"><dt>Accuracy:</dt> <dd>' + (move.accuracy && move.accuracy !== true ? move.accuracy + \"%\" : \"&mdash;\") + \"</dd></dl>\";\n        buf += '<dl class=\"ppentry\"><dt>PP:</dt> <dd>' + move.pp + (move.noPPBoosts ? \"\" : ' <small class=\"minor\">(max: ' + 1.6 * move.pp + \")</small>\") + \"</dd>\";\n        buf += '</dl><div style=\"clear:left;padding-top:1px\"></div>';\n        if (move.isZ) {\n            buf += '<p><strong><a href=\"' + Config.baseurl + 'tags/zmove\" data-target=\"push\">[Z-Move]</a></strong>';\n            if (move.isZ !== true) {\n                var zItem = getID(BattleItems, move.isZ);\n                buf += ' requiring <a href=\"' + Config.baseurl + \"items/\" + zItem.id + '\" data-target=\"push\">' + zItem.name + \"</a>\";\n            }\n            buf += \"</p>\";\n        } else if (move.isMax) {\n            if (move.isMax !== true) {\n                buf += '<p><strong><a href=\"' + Config.baseurl + 'tags/gmaxmove\" data-target=\"push\">[G-Max Move]</a></strong>';\n                var maxUser = getID(BattlePokedex, move.isMax);\n                buf += ' used by <a href=\"' + Config.baseurl + \"pokemon/\" + maxUser.id + 'gmax\" data-target=\"push\">' + maxUser.name + \"-Gmax</a>\";\n                if (maxUser.name === \"Toxtricity\") buf += ' or <a href=\"' + Config.baseurl + \"pokemon/\" + maxUser.id + 'lowkeygmax\" data-target=\"push\">' + maxUser.name + \"-Low-Key-Gmax</a>\";\n            } else buf += '<p><strong><a href=\"' + Config.baseurl + 'tags/maxmove\" data-target=\"push\">[Max Move]</a></strong>';\n        }\n        if (move.priority > 1) buf += \"<p>Nearly always moves first <em>(priority +\" + move.priority + \")</em>.</p>\";\n        else if (move.priority <= -1) buf += \"<p>Nearly always moves last <em>(priority &minus;\" + -move.priority + \")</em>.</p>\";\n        else if (move.priority === 1) buf += \"<p>Usually moves first <em>(priority +\" + move.priority + \")</em>.</p>\";\n        buf += \"<p>\" + escapeHTML(move.desc || move.shortDesc) + \"</p>\";\n        if (\"defrost\" in move.flags) buf += '<p><a class=\"subtle\" href=\"' + Config.baseurl + 'tags/defrost\" data-target=\"push\">The user thaws out</a> if it is frozen.</p>';\n        if (!(\"protect\" in move.flags) && move.target !== \"self\") buf += '<p class=\"movetag\"><a href=\"' + Config.baseurl + 'tags/bypassprotect\" data-target=\"push\">Bypasses Protect</a> <small>(bypasses <a class=\"subtle\" href=\"' + Config.baseurl + 'moves/protect\" data-target=\"push\">Protect</a>, <a class=\"subtle\" href=\"' + Config.baseurl + 'moves/detect\" data-target=\"push\">Detect</a>, <a class=\"subtle\" href=\"' + Config.baseurl + 'moves/kingsshield\" data-target=\"push\">King\\'s Shield</a>, and <a class=\"subtle\" href=\"' + Config.baseurl + 'moves/spikyshield\" data-target=\"push\">Spiky Shield</a>)</small></p>';\n        if (\"bypasssub\" in move.flags) buf += '<p class=\"movetag\"><a href=\"' + Config.baseurl + 'tags/bypasssub\" data-target=\"push\">Bypasses Substitute</a> <small>(bypasses but does not break a <a class=\"subtle\" href=\"' + Config.baseurl + 'moves/substitute\" data-target=\"push\">Substitute</a>)</small></p>';\n        if (!(\"reflectable\" in move.flags) && move.target !== \"self\" && move.category === \"Status\") buf += '<p class=\"movetag\"><a href=\"' + Config.baseurl + 'tags/nonreflectable\" data-target=\"push\">&#x2713; Nonreflectable</a> <small>(can\\'t be bounced by <a class=\"subtle\" href=\"' + Config.baseurl + 'moves/magiccoat\" data-target=\"push\">Magic Coat</a> or <a class=\"subtle\" href=\"' + Config.baseurl + 'abilities/magicbounce\" data-target=\"push\">Magic Bounce</a>)</small></p>';\n        if (!(\"mirror\" in move.flags) && move.target !== \"self\") buf += '<p class=\"movetag\"><a href=\"' + Config.baseurl + 'tags/nonmirror\" data-target=\"push\">&#x2713; Nonmirror</a> <small>(can\\'t be copied by <a class=\"subtle\" href=\"' + Config.baseurl + 'moves/mirrormove\" data-target=\"push\">Mirror Move</a>)</small></p>';\n        if (!(\"snatch\" in move.flags) && (move.target === \"self\" || move.target === \"allyTeam\" || move.target === \"adjacentAllyOrSelf\")) buf += '<p class=\"movetag\"><a href=\"' + Config.baseurl + 'tags/nonsnatchable\" data-target=\"push\">&#x2713; Nonsnatchable</a> <small>(can\\'t be copied by <a class=\"subtle\" href=\"' + Config.baseurl + 'moves/snatch\" data-target=\"push\">Snatch</a>)</small></p>';\n        if (\"contact\" in move.flags) buf += '<p class=\"movetag\"><a href=\"' + Config.baseurl + 'tags/contact\" data-target=\"push\">&#x2713; Contact</a> <small>(affected by many abilities like Iron Barbs and moves like Spiky Shield)</small></p>';\n        if (\"sound\" in move.flags) buf += '<p class=\"movetag\"><a href=\"' + Config.baseurl + 'tags/sound\" data-target=\"push\">&#x2713; Sound</a> <small>(bypasses <a class=\"subtle\" href=\"' + Config.baseurl + 'moves/substitute\" data-target=\"push\">Substitute</a>, doesn\\'t affect <a class=\"subtle\" href=\"' + Config.baseurl + 'abilities/soundproof\" data-target=\"push\">Soundproof</a> pokemon)</small></p>';\n        if (\"powder\" in move.flags) buf += '<p class=\"movetag\"><a href=\"' + Config.baseurl + 'tags/powder\" data-target=\"push\">&#x2713; Powder</a> <small>(doesn\\'t affect <a class=\"subtle\" href=\"' + Config.baseurl + 'types/grass\" data-target=\"push\">Grass</a>-types, <a class=\"subtle\" href=\"' + Config.baseurl + 'abilities/overcoat\" data-target=\"push\">Overcoat</a> pokemon, and <a class=\"subtle\" href=\"' + Config.baseurl + 'items/safetygoggles\" data-target=\"push\">Safety Goggles</a> holders)</small></p>';\n        if (\"punch\" in move.flags) buf += '<p class=\"movetag\"><a href=\"' + Config.baseurl + 'tags/fist\" data-target=\"push\">&#x2713; Fist</a> <small>(boosted by <a class=\"subtle\" href=\"' + Config.baseurl + 'abilities/ironfist\" data-target=\"push\">Iron Fist</a>)</small></p>';\n        if (\"pulse\" in move.flags) buf += '<p class=\"movetag\"><a href=\"' + Config.baseurl + 'tags/pulse\" data-target=\"push\">&#x2713; Pulse</a> <small>(boosted by <a class=\"subtle\" href=\"' + Config.baseurl + 'abilities/megalauncher\" data-target=\"push\">Mega Launcher</a>)</small></p>';\n        if (\"bite\" in move.flags) buf += '<p class=\"movetag\"><a href=\"' + Config.baseurl + 'tags/bite\" data-target=\"push\">&#x2713; Bite</a> <small>(boosted by <a class=\"subtle\" href=\"' + Config.baseurl + 'abilities/strongjaw\" data-target=\"push\">Strong Jaw</a>)</small></p>';\n        if (\"bullet\" in move.flags) buf += '<p class=\"movetag\"><a href=\"' + Config.baseurl + 'tags/ballistic\" data-target=\"push\">&#x2713; Ballistic</a> <small>(doesn\\'t affect <a class=\"subtle\" href=\"' + Config.baseurl + 'abilities/bulletproof\" data-target=\"push\">Bulletproof</a> pokemon)</small></p>';\n        if (\"slicing\" in move.flags) buf += '<p class=\"movetag\"><a href=\"' + Config.baseurl + 'tags/slicing\" data-target=\"push\">&#x2713; Slicing</a> <small>(boosted by <a class=\"subtle\" href=\"' + Config.baseurl + 'abilities/sharpness\" data-target=\"push\">Sharpness</a>)</small></p>';\n        if (\"wind\" in move.flags) buf += '<p class=\"movetag\"><a href=\"' + Config.baseurl + 'tags/wind\" data-target=\"push\">&#x2713; Wind</a> <small>(interacts with <a class=\"subtle\" href=\"' + Config.baseurl + 'abilities/windpower\" data-target=\"push\">Wind Power</a> and <a class=\"subtle\" href=\"' + Config.baseurl + 'abilities/windrider\" data-target=\"push\">Wind Rider</a>)</small></p>';\n        if (move.target === \"allAdjacent\") buf += '<p class=\"movetag\"><small>In Doubles, hits all adjacent Pok\\xe9mon (including allies)</small></p>';\n        else if (move.target === \"allAdjacentFoes\") buf += '<p class=\"movetag\"><small>In Doubles, hits all adjacent foes</small></p>';\n        else if (move.target === \"randomNormal\") buf += '<p class=\"movetag\"><small>In Doubles, hits a random foe (you can\\'t choose its target)</small></p>';\n        else if (move.target === \"adjacentAllyOrSelf\") buf += '<p class=\"movetag\"><small>In Doubles, can be used either on the user or an adjacent ally</small></p>';\n        // Z-Move\n        var zMoveTable = {\n            Poison: \"Acid Downpour\",\n            Fighting: \"All-Out Pummeling\",\n            Dark: \"Black Hole Eclipse\",\n            Grass: \"Bloom Doom\",\n            Normal: \"Breakneck Blitz\",\n            Rock: \"Continental Crush\",\n            Steel: \"Corkscrew Crash\",\n            Dragon: \"Devastating Drake\",\n            Electric: \"Gigavolt Havoc\",\n            Water: \"Hydro Vortex\",\n            Fire: \"Inferno Overdrive\",\n            Ghost: \"Never-Ending Nightmare\",\n            Bug: \"Savage Spin-Out\",\n            Psychic: \"Shattered Psyche\",\n            Ice: \"Subzero Slammer\",\n            Flying: \"Supersonic Skystrike\",\n            Ground: \"Tectonic Rage\",\n            Fairy: \"Twinkle Tackle\"\n        };\n        var zMoveVersionTable = {\n            spiritshackle: \"Sinister Arrow Raid\",\n            volttackle: \"Catastropika\",\n            lastresort: \"Extreme Evoboost\",\n            psychic: \"Genesis Supernova\",\n            naturesmadness: \"Guardian of Alola\",\n            darkestlariat: \"Malicious Moonsault\",\n            sparklingaria: \"Oceanic Operetta\",\n            gigaimpact: \"Pulverizing Pancake\",\n            spectralthief: \"Soul-Stealing 7-Star Strike\",\n            thunderbolt: \"Stoked Sparksurfer\",\n            thunderbolt2: \"10,000,000 Volt Thunderbolt\",\n            photongeyser: \"Light That Burns the Sky\",\n            sunsteelstrike: \"Searing Sunraze Smash\",\n            moongeistbeam: \"Menacing Moonraze Maelstrom\",\n            playrough: \"Let's Snuggle Forever\",\n            stoneedge: \"Splintered Stormshards\",\n            clangingscales: \"Clangorous Soulblaze\"\n        };\n        if (!move.isMax && (move.zMovePower || move.zMoveEffect || move.zMoveBoost)) {\n            buf += \"<h3>Z-Move(s)</h3>\";\n            if (move.zMovePower) {\n                buf += '<p><strong><a href=\"' + Config.baseurl + \"moves/\" + toID(zMoveTable[move.type]) + '\" data-target=\"push\">';\n                buf += zMoveTable[move.type];\n                buf += \"</a></strong>: \";\n                buf += \"\" + move.zMovePower + \" base power, \" + move.category + \"</p>\";\n            }\n            if (move.zMoveBoost) {\n                buf += \"<p><strong>Z-\" + move.name + \"</strong>: \";\n                var isFirst = true;\n                for(var i in move.zMoveBoost){\n                    if (!isFirst) buf += \", \";\n                    isFirst = false;\n                    buf += \"+\" + move.zMoveBoost[i] + \" \" + (BattleStatNames[i] || i);\n                }\n                buf += \", then uses \" + move.name + \"</p>\";\n            }\n            if (move.zMoveEffect === \"heal\") buf += \"<p><strong>Z-\" + move.name + \"</strong>: fully heals the user, then uses \" + move.name + \"</p>\";\n            else if (move.zMoveEffect === \"clearnegativeboost\") buf += \"<p><strong>Z-\" + move.name + \"</strong>: clears the user's negative stat boosts, then uses \" + move.name + \"</p>\";\n            else if (move.zMoveEffect === \"healreplacement\") buf += \"<p><strong>Z-\" + move.name + \"</strong>: uses \" + move.name + \", then heals the replacement\" + \"</p>\";\n            else if (move.zMoveEffect === \"crit2\") buf += \"<p><strong>Z-\" + move.name + \"</strong>: increases the user's crit rate by 2, then uses \" + move.name + \"</p>\";\n            else if (move.zMoveEffect === \"redirect\") buf += \"<p><strong>Z-\" + move.name + \"</strong>: redirects opponent's moves to the user (like Follow Me) in doubles, then uses \" + move.name + \"</p>\";\n            else if (move.zMoveEffect === \"curse\") buf += \"<p><strong>Z-\" + move.name + \"</strong>: +1 Atk if the user is a ghost, or fully heals the user otherwise, then uses \" + move.name + \"</p>\";\n            if (id in zMoveVersionTable) {\n                var zMove = getID(BattleMovedex, zMoveVersionTable[id]);\n                buf += '<p><strong><a href=\"' + Config.baseurl + \"moves/\" + zMove.id + '\" data-target=\"push\">' + zMove.name + \"</a></strong>: \";\n                if (zMove.basePower) buf += \"\" + zMove.basePower + \" base power, \" + zMove.category + \"</p>\";\n                else buf += zMove.shortDesc;\n                buf += \"</p>\";\n            }\n            if (id + \"2\" in zMoveVersionTable) {\n                var zMove = getID(BattleMovedex, zMoveVersionTable[id + \"2\"]);\n                buf += '<p><strong><a href=\"' + Config.baseurl + \"moves/\" + zMove.id + '\" data-target=\"push\">' + zMove.name + \"</a></strong>: \";\n                if (zMove.basePower) buf += \"\" + zMove.basePower + \" base power, \" + zMove.category + \"</p>\";\n                else buf += zMove.shortDesc;\n                buf += \"</p>\";\n            }\n        }\n        // Max Move\n        var maxMoveTable = {\n            Poison: \"Ooze\",\n            Fighting: \"Knuckle\",\n            Dark: \"Darkness\",\n            Grass: \"Overgrowth\",\n            Normal: \"Strike\",\n            Rock: \"Rockfall\",\n            Steel: \"Steelspike\",\n            Dragon: \"Wyrmwind\",\n            Electric: \"Lightning\",\n            Water: \"Geyser\",\n            Fire: \"Flare\",\n            Ghost: \"Phantasm\",\n            Bug: \"Flutterby\",\n            Psychic: \"Mindstorm\",\n            Ice: \"Hailstorm\",\n            Flying: \"Airstream\",\n            Ground: \"Quake\",\n            Fairy: \"Starfall\",\n            Status: \"Guard\"\n        };\n        var gmaxMoveTable = {\n            Bug: [\n                \"Befuddle\"\n            ],\n            Fire: [\n                \"Centiferno\",\n                \"Wildfire\"\n            ],\n            Fighting: [\n                \"Chi Strike\"\n            ],\n            Normal: [\n                \"Cuddle\",\n                \"Gold Rush\",\n                \"Replenish\"\n            ],\n            Dragon: [\n                \"Depletion\"\n            ],\n            Fairy: [\n                \"Finale\",\n                \"Smite\"\n            ],\n            Water: [\n                \"Foam Burst\",\n                \"Stonesurge\"\n            ],\n            Psychic: [\n                \"Gravitas\"\n            ],\n            Poison: [\n                \"Malodor\"\n            ],\n            Steel: [\n                \"Meltdown\",\n                \"Steelsurge\"\n            ],\n            Ice: [\n                \"Resonance\"\n            ],\n            Ground: [\n                \"Sandblast\"\n            ],\n            Dark: [\n                \"Snooze\"\n            ],\n            Electric: [\n                \"Stun Shock\",\n                \"Volt Crash\"\n            ],\n            Grass: [\n                \"Sweetness\",\n                \"Tartness\"\n            ],\n            Ghost: [\n                \"Terror\"\n            ],\n            Rock: [\n                \"Volcalith\"\n            ],\n            Flying: [\n                \"Wind Rage\"\n            ]\n        };\n        if (move.gmaxPower && !move.isZ && !move.isMax) {\n            buf += \"<h3>Max Move</h3>\";\n            if (move.category !== \"Status\") {\n                buf += '<p><strong><a href=\"' + Config.baseurl + \"moves/max\" + toID(maxMoveTable[move.type]) + '\" data-target=\"push\">';\n                buf += \"Max \" + maxMoveTable[move.type];\n                buf += \"</a></strong>: \";\n                buf += \"\" + move.gmaxPower + \" base power, \" + move.category + \"</p>\";\n            } else {\n                buf += '<p><strong><a href=\"' + Config.baseurl + 'moves/maxguard\" data-target=\"push\">';\n                buf += \"Max Guard\";\n                buf += \"</a></strong>\";\n                buf += move.shortDesc;\n            }\n            if (move.type in gmaxMoveTable && move.category !== \"Status\") for(let i = 0; i < gmaxMoveTable[move.type].length; i++){\n                var gmaxMove = getID(BattleMovedex, \"gmax\" + gmaxMoveTable[move.type][i]);\n                buf += '<p>Becomes <strong><a href=\"' + Config.baseurl + \"moves/\" + gmaxMove.id + '\" data-target=\"push\">' + gmaxMove.name + \"</a></strong> \";\n                buf += 'if used by <strong><a href=\"' + Config.baseurl + \"pokemon/\" + gmaxMove.isMax + 'gmax\" data-target=\"push\">' + gmaxMove.isMax + \"-Gmax</a></strong>\";\n                if (gmaxMove.isMax === \"Toxtricity\") buf += ' or <strong><a href=\"' + Config.baseurl + \"pokemon/\" + gmaxMove.isMax + 'lowkeygmax\" data-target=\"push\">' + gmaxMove.isMax + \"-Low-Key-Gmax</a></strong>\";\n                buf += \"</p>\";\n            }\n        }\n        // distribution\n        buf += '<ul class=\"utilichart metricchart nokbd\">';\n        buf += \"</ul>\";\n        buf += \"</div>\";\n        this.html(buf);\n        setTimeout(this.renderDistribution.bind(this));\n    },\n    getDistribution: function() {\n        var results = [];\n        for(let pokeId in BattlePokedex){\n            let learnset = getLearnset(pokeId);\n            results = results.concat(learnset.filter((m)=>m.move == this.id).map((m)=>{\n                return {\n                    poke: pokeId,\n                    ...m\n                };\n            }));\n        }\n        const methods = [\n            \"lvl\",\n            \"tm\",\n            \"tutor\",\n            \"egg\"\n        ];\n        results.sort((a, b)=>{\n            if (a.how != b.how) return methods.indexOf(a.how) - methods.indexOf(b.how);\n            if (a.how == \"lvl\" && a.level != b.level) return a.level - b.level;\n            return a.poke.localeCompare(b.poke);\n        });\n        for (let method of methods){\n            let index = results.findIndex((r)=>r.how == method);\n            if (index < 0) continue;\n            results.splice(index, 0, {\n                start: true,\n                method: method\n            });\n        }\n        return this.results = results;\n    },\n    renderDistribution: function() {\n        var results = this.getDistribution();\n        this.$chart = this.$(\".utilichart\");\n        if (results.length > 1600 / 33) {\n            this.streamLoading = true;\n            this.$el.on(\"scroll\", this.handleScroll.bind(this));\n            var panelTop = this.$el.children().offset().top;\n            var panelHeight = this.$el.outerHeight();\n            var chartTop = this.$chart.offset().top;\n            var scrollLoc = this.scrollLoc = this.$el.scrollTop();\n            var start = Math.floor((scrollLoc - (chartTop - panelTop)) / 33 - 35);\n            var end = Math.floor(start + 35 + panelHeight / 33 + 35);\n            if (start < 0) start = 0;\n            if (end > results.length - 1) end = results.length - 1;\n            this.start = start, this.end = end;\n            // distribution\n            var buf = \"\";\n            for(var i = 0, len = results.length; i < len; i++)buf += '<li class=\"result\">' + this.renderRow(i, i < start || i > end) + \"</li>\";\n            this.$chart.html(buf);\n        } else {\n            var buf = \"\";\n            for(var i = 0, len = results.length; i < len; i++)buf += '<li class=\"result\">' + this.renderRow(i) + \"</li>\";\n            this.$chart.html(buf);\n        }\n    },\n    renderRow: function(i, offscreen) {\n        var results = this.results;\n        var template = BattlePokedex[results[i].poke];\n        if (results[i].start) switch(results[i].method){\n            case \"lvl\":\n                return \"<h3>Level-up</h3>\";\n            case \"tm\":\n                return \"<h3>TM/HM</h3>\";\n            case \"tutor\":\n                return \"<h3>Tutor</h3>\";\n            case \"egg\":\n                return \"<h3>Egg</h3>\";\n        }\n        else if (offscreen) return \"\" + template.name + \" \" + template.abilities[\"0\"] + \" \" + (template.abilities[\"1\"] || \"\") + \" \" + (template.abilities[\"H\"] || \"\") + \"\";\n        else {\n            var desc = \"\";\n            switch(results[i].how){\n                case \"lvl\":\n                    desc = results[i].level <= 1 ? \"&ndash;\" : \"<small>L</small>\" + (results[i].level || \"?\");\n                    break;\n                case \"tm\":\n                    desc = `<span class=\"itemicon\" style=\"margin-top:-3px;${getItemIcon(\"tr01\")}\"></span>`;\n                    break;\n                case \"tutor\":\n                    desc = '<img src=\"' + ResourcePrefix + 'sprites/tutor.png\" style=\"margin-top:-4px;opacity:.7\" width=\"27\" height=\"26\" alt=\"T\" />';\n                    break;\n                case \"egg\":\n                    desc = '<span class=\"picon\" style=\"margin-top:-12px;' + getPokemonIcon(\"egg\") + '\"></span>';\n                    break;\n                case \"event\":\n                    desc = \"!\";\n                    break;\n                case \"past\":\n                    desc = \"...\";\n                    break;\n            }\n            return BattleSearch.renderTaggedPokemonRowInner(template, desc);\n        }\n    },\n    handleScroll: function() {\n        var scrollLoc = this.$el.scrollTop();\n        if (Math.abs(scrollLoc - this.scrollLoc) > 660) this.renderUpdateDistribution();\n    },\n    debouncedPurgeTimer: null,\n    renderUpdateDistribution: function(fullUpdate) {\n        if (this.debouncedPurgeTimer) {\n            clearTimeout(this.debouncedPurgeTimer);\n            this.debouncedPurgeTimer = null;\n        }\n        var panelTop = this.$el.children().offset().top;\n        var panelHeight = this.$el.outerHeight();\n        var chartTop = this.$chart.offset().top;\n        var scrollLoc = this.scrollLoc = this.$el.scrollTop();\n        var results = this.results;\n        var rowFit = Math.floor(panelHeight / 33);\n        var start = Math.floor((scrollLoc - (chartTop - panelTop)) / 33 - 35);\n        var end = start + 35 + rowFit + 35;\n        if (start < 0) start = 0;\n        if (end > results.length - 1) end = results.length - 1;\n        var $rows = this.$chart.children();\n        if (fullUpdate || start < this.start - rowFit - 30 || end > this.end + rowFit + 30) {\n            var buf = \"\";\n            for(var i = 0, len = results.length; i < len; i++)buf += '<li class=\"result\">' + this.renderRow(i, i < start || i > end) + \"</li>\";\n            this.$chart.html(buf);\n            this.start = start, this.end = end;\n            return;\n        }\n        if (start < this.start) {\n            for(var i = start; i < this.start; i++)$rows[i].innerHTML = this.renderRow(i);\n            this.start = start;\n        }\n        if (end > this.end) {\n            for(var i = this.end + 1; i <= end; i++)$rows[i].innerHTML = this.renderRow(i);\n            this.end = end;\n        }\n        if (this.end - this.start > rowFit + 90) {\n            var self = this;\n            this.debouncedPurgeTimer = setTimeout(function() {\n                self.renderUpdateDistribution(true);\n            }, 1000);\n        }\n    }\n});\n\n\n//# sourceMappingURL=index.b47b3add.js.map\n","window.PokedexMovePanel = PokedexResultPanel.extend({\n  initialize: function (id) {\n    id = toID(id);\n    var move = getID(BattleMovedex, id);\n    this.id = id;\n    this.shortTitle = move.name;\n\n    var buf = '<div class=\"pfx-body dexentry\">';\n\n    buf +=\n      '<a href=\"' +\n      Config.baseurl +\n      '\" class=\"pfx-backbutton\" data-target=\"back\"><i class=\"fa fa-chevron-left\"></i> Pok&eacute;dex</a>';\n    buf +=\n      '<h1><a href=\"' +\n      Config.baseurl +\n      \"moves/\" +\n      id +\n      '\" data-target=\"push\" class=\"subtle\">' +\n      move.name +\n      \"</a></h1>\";\n\n    if (move.id === \"magikarpsrevenge\") {\n      buf +=\n        '<div class=\"warning\"><strong>Note:</strong> Made for testing on Pok&eacute;mon Showdown, not a real move.</div>';\n    } else if (move.isNonstandard) {\n      buf += '<div class=\"warning\"><strong>Note:</strong> ';\n      switch (move.isNonstandard) {\n        case \"Past\":\n          buf += \"This move is only available in past generations.\";\n          break;\n        case \"Future\":\n          buf += \"This move is only available in future generations.\";\n          break;\n        case \"Unobtainable\":\n          if (move.isMax) {\n            buf +=\n              \"This move can't be learned normally, it can only be used by \" +\n              (move.isMax === true ? \"Dynamaxing\" : \"Gigantamaxing\") +\n              \".\";\n          } else if (move.isZ) {\n            buf += \"This move can't be learned normally, it can only be used with a Z-Crystal.\";\n          } else {\n            buf += \"This move can't be learned normally.\";\n          }\n          break;\n        case \"CAP\":\n          buf += 'This is a made-up move by <a href=\"http://www.smogon.com/cap/\" target=\"_blank\">Smogon CAP</a>.';\n          break;\n        case \"LGPE\":\n          buf += \"This move is only available in Let's Go! Pikachu and Eevee.\";\n          break;\n        case \"Custom\":\n          buf += \"This is a custom move, not available during normal gameplay.\";\n          break;\n      }\n      buf += \"</div>\";\n    }\n\n    buf += '<dl class=\"movetypeentry\">';\n    buf += \"<dt>Type:</dt> <dd>\";\n    buf +=\n      '<a class=\"type ' +\n      toID(move.type) +\n      '\" href=\"' +\n      Config.baseurl +\n      \"types/\" +\n      toID(move.type) +\n      '\" data-target=\"push\">' +\n      move.type +\n      \"</a> \";\n    buf +=\n      '<a class=\"type ' +\n      toID(move.category) +\n      '\" href=\"' +\n      Config.baseurl +\n      \"categories/\" +\n      toID(move.category) +\n      '\" data-target=\"push\">' +\n      move.category +\n      \"</a>\";\n    buf += \"</dd></dl>\";\n\n    if (move.category !== \"Status\") {\n      buf +=\n        '<dl class=\"powerentry\"><dt>Base power:</dt> <dd><strong>' +\n        (move.basePower || \"&mdash;\") +\n        \"</strong></dd></dl>\";\n    }\n    buf +=\n      '<dl class=\"accuracyentry\"><dt>Accuracy:</dt> <dd>' +\n      (move.accuracy && move.accuracy !== true ? move.accuracy + \"%\" : \"&mdash;\") +\n      \"</dd></dl>\";\n    buf +=\n      '<dl class=\"ppentry\"><dt>PP:</dt> <dd>' +\n      move.pp +\n      (move.noPPBoosts ? \"\" : ' <small class=\"minor\">(max: ' + (8 / 5) * move.pp + \")</small>\") +\n      \"</dd>\";\n    buf += '</dl><div style=\"clear:left;padding-top:1px\"></div>';\n\n    if (move.isZ) {\n      buf += '<p><strong><a href=\"' + Config.baseurl + 'tags/zmove\" data-target=\"push\">[Z-Move]</a></strong>';\n      if (move.isZ !== true) {\n        var zItem = getID(BattleItems, move.isZ);\n        buf +=\n          ' requiring <a href=\"' + Config.baseurl + \"items/\" + zItem.id + '\" data-target=\"push\">' + zItem.name + \"</a>\";\n      }\n      buf += \"</p>\";\n    } else if (move.isMax) {\n      if (move.isMax !== true) {\n        buf += '<p><strong><a href=\"' + Config.baseurl + 'tags/gmaxmove\" data-target=\"push\">[G-Max Move]</a></strong>';\n        var maxUser = getID(BattlePokedex, move.isMax);\n        buf +=\n          ' used by <a href=\"' +\n          Config.baseurl +\n          \"pokemon/\" +\n          maxUser.id +\n          'gmax\" data-target=\"push\">' +\n          maxUser.name +\n          \"-Gmax</a>\";\n        if (maxUser.name === \"Toxtricity\") {\n          buf +=\n            ' or <a href=\"' +\n            Config.baseurl +\n            \"pokemon/\" +\n            maxUser.id +\n            'lowkeygmax\" data-target=\"push\">' +\n            maxUser.name +\n            \"-Low-Key-Gmax</a>\";\n        }\n      } else {\n        buf += '<p><strong><a href=\"' + Config.baseurl + 'tags/maxmove\" data-target=\"push\">[Max Move]</a></strong>';\n      }\n    }\n\n    if (move.priority > 1) {\n      buf += \"<p>Nearly always moves first <em>(priority +\" + move.priority + \")</em>.</p>\";\n    } else if (move.priority <= -1) {\n      buf += \"<p>Nearly always moves last <em>(priority &minus;\" + -move.priority + \")</em>.</p>\";\n    } else if (move.priority === 1) {\n      buf += \"<p>Usually moves first <em>(priority +\" + move.priority + \")</em>.</p>\";\n    }\n\n    buf += \"<p>\" + escapeHTML(move.desc || move.shortDesc) + \"</p>\";\n\n    if (\"defrost\" in move.flags) {\n      buf +=\n        '<p><a class=\"subtle\" href=\"' +\n        Config.baseurl +\n        'tags/defrost\" data-target=\"push\">The user thaws out</a> if it is frozen.</p>';\n    }\n    if (!(\"protect\" in move.flags) && move.target !== \"self\") {\n      buf +=\n        '<p class=\"movetag\"><a href=\"' +\n        Config.baseurl +\n        'tags/bypassprotect\" data-target=\"push\">Bypasses Protect</a> <small>(bypasses <a class=\"subtle\" href=\"' +\n        Config.baseurl +\n        'moves/protect\" data-target=\"push\">Protect</a>, <a class=\"subtle\" href=\"' +\n        Config.baseurl +\n        'moves/detect\" data-target=\"push\">Detect</a>, <a class=\"subtle\" href=\"' +\n        Config.baseurl +\n        'moves/kingsshield\" data-target=\"push\">King\\'s Shield</a>, and <a class=\"subtle\" href=\"' +\n        Config.baseurl +\n        'moves/spikyshield\" data-target=\"push\">Spiky Shield</a>)</small></p>';\n    }\n    if (\"bypasssub\" in move.flags) {\n      buf +=\n        '<p class=\"movetag\"><a href=\"' +\n        Config.baseurl +\n        'tags/bypasssub\" data-target=\"push\">Bypasses Substitute</a> <small>(bypasses but does not break a <a class=\"subtle\" href=\"' +\n        Config.baseurl +\n        'moves/substitute\" data-target=\"push\">Substitute</a>)</small></p>';\n    }\n    if (!(\"reflectable\" in move.flags) && move.target !== \"self\" && move.category === \"Status\") {\n      buf +=\n        '<p class=\"movetag\"><a href=\"' +\n        Config.baseurl +\n        'tags/nonreflectable\" data-target=\"push\">&#x2713; Nonreflectable</a> <small>(can\\'t be bounced by <a class=\"subtle\" href=\"' +\n        Config.baseurl +\n        'moves/magiccoat\" data-target=\"push\">Magic Coat</a> or <a class=\"subtle\" href=\"' +\n        Config.baseurl +\n        'abilities/magicbounce\" data-target=\"push\">Magic Bounce</a>)</small></p>';\n    }\n    if (!(\"mirror\" in move.flags) && move.target !== \"self\") {\n      buf +=\n        '<p class=\"movetag\"><a href=\"' +\n        Config.baseurl +\n        'tags/nonmirror\" data-target=\"push\">&#x2713; Nonmirror</a> <small>(can\\'t be copied by <a class=\"subtle\" href=\"' +\n        Config.baseurl +\n        'moves/mirrormove\" data-target=\"push\">Mirror Move</a>)</small></p>';\n    }\n    if (\n      !(\"snatch\" in move.flags) &&\n      (move.target === \"self\" || move.target === \"allyTeam\" || move.target === \"adjacentAllyOrSelf\")\n    ) {\n      buf +=\n        '<p class=\"movetag\"><a href=\"' +\n        Config.baseurl +\n        'tags/nonsnatchable\" data-target=\"push\">&#x2713; Nonsnatchable</a> <small>(can\\'t be copied by <a class=\"subtle\" href=\"' +\n        Config.baseurl +\n        'moves/snatch\" data-target=\"push\">Snatch</a>)</small></p>';\n    }\n\n    if (\"contact\" in move.flags) {\n      buf +=\n        '<p class=\"movetag\"><a href=\"' +\n        Config.baseurl +\n        'tags/contact\" data-target=\"push\">&#x2713; Contact</a> <small>(affected by many abilities like Iron Barbs and moves like Spiky Shield)</small></p>';\n    }\n    if (\"sound\" in move.flags) {\n      buf +=\n        '<p class=\"movetag\"><a href=\"' +\n        Config.baseurl +\n        'tags/sound\" data-target=\"push\">&#x2713; Sound</a> <small>(bypasses <a class=\"subtle\" href=\"' +\n        Config.baseurl +\n        'moves/substitute\" data-target=\"push\">Substitute</a>, doesn\\'t affect <a class=\"subtle\" href=\"' +\n        Config.baseurl +\n        'abilities/soundproof\" data-target=\"push\">Soundproof</a> pokemon)</small></p>';\n    }\n    if (\"powder\" in move.flags) {\n      buf +=\n        '<p class=\"movetag\"><a href=\"' +\n        Config.baseurl +\n        'tags/powder\" data-target=\"push\">&#x2713; Powder</a> <small>(doesn\\'t affect <a class=\"subtle\" href=\"' +\n        Config.baseurl +\n        'types/grass\" data-target=\"push\">Grass</a>-types, <a class=\"subtle\" href=\"' +\n        Config.baseurl +\n        'abilities/overcoat\" data-target=\"push\">Overcoat</a> pokemon, and <a class=\"subtle\" href=\"' +\n        Config.baseurl +\n        'items/safetygoggles\" data-target=\"push\">Safety Goggles</a> holders)</small></p>';\n    }\n    if (\"punch\" in move.flags) {\n      buf +=\n        '<p class=\"movetag\"><a href=\"' +\n        Config.baseurl +\n        'tags/fist\" data-target=\"push\">&#x2713; Fist</a> <small>(boosted by <a class=\"subtle\" href=\"' +\n        Config.baseurl +\n        'abilities/ironfist\" data-target=\"push\">Iron Fist</a>)</small></p>';\n    }\n    if (\"pulse\" in move.flags) {\n      buf +=\n        '<p class=\"movetag\"><a href=\"' +\n        Config.baseurl +\n        'tags/pulse\" data-target=\"push\">&#x2713; Pulse</a> <small>(boosted by <a class=\"subtle\" href=\"' +\n        Config.baseurl +\n        'abilities/megalauncher\" data-target=\"push\">Mega Launcher</a>)</small></p>';\n    }\n    if (\"bite\" in move.flags) {\n      buf +=\n        '<p class=\"movetag\"><a href=\"' +\n        Config.baseurl +\n        'tags/bite\" data-target=\"push\">&#x2713; Bite</a> <small>(boosted by <a class=\"subtle\" href=\"' +\n        Config.baseurl +\n        'abilities/strongjaw\" data-target=\"push\">Strong Jaw</a>)</small></p>';\n    }\n    if (\"bullet\" in move.flags) {\n      buf +=\n        '<p class=\"movetag\"><a href=\"' +\n        Config.baseurl +\n        'tags/ballistic\" data-target=\"push\">&#x2713; Ballistic</a> <small>(doesn\\'t affect <a class=\"subtle\" href=\"' +\n        Config.baseurl +\n        'abilities/bulletproof\" data-target=\"push\">Bulletproof</a> pokemon)</small></p>';\n    }\n    if (\"slicing\" in move.flags) {\n      buf +=\n        '<p class=\"movetag\"><a href=\"' +\n        Config.baseurl +\n        'tags/slicing\" data-target=\"push\">&#x2713; Slicing</a> <small>(boosted by <a class=\"subtle\" href=\"' +\n        Config.baseurl +\n        'abilities/sharpness\" data-target=\"push\">Sharpness</a>)</small></p>';\n    }\n    if (\"wind\" in move.flags) {\n      buf +=\n        '<p class=\"movetag\"><a href=\"' +\n        Config.baseurl +\n        'tags/wind\" data-target=\"push\">&#x2713; Wind</a> <small>(interacts with <a class=\"subtle\" href=\"' +\n        Config.baseurl +\n        'abilities/windpower\" data-target=\"push\">Wind Power</a> and <a class=\"subtle\" href=\"' +\n        Config.baseurl +\n        'abilities/windrider\" data-target=\"push\">Wind Rider</a>)</small></p>';\n    }\n\n    if (move.target === \"allAdjacent\") {\n      buf += '<p class=\"movetag\"><small>In Doubles, hits all adjacent Pokémon (including allies)</small></p>';\n    } else if (move.target === \"allAdjacentFoes\") {\n      buf += '<p class=\"movetag\"><small>In Doubles, hits all adjacent foes</small></p>';\n    } else if (move.target === \"randomNormal\") {\n      buf += '<p class=\"movetag\"><small>In Doubles, hits a random foe (you can\\'t choose its target)</small></p>';\n    } else if (move.target === \"adjacentAllyOrSelf\") {\n      buf += '<p class=\"movetag\"><small>In Doubles, can be used either on the user or an adjacent ally</small></p>';\n    }\n\n    // Z-Move\n    var zMoveTable = {\n      Poison: \"Acid Downpour\",\n      Fighting: \"All-Out Pummeling\",\n      Dark: \"Black Hole Eclipse\",\n      Grass: \"Bloom Doom\",\n      Normal: \"Breakneck Blitz\",\n      Rock: \"Continental Crush\",\n      Steel: \"Corkscrew Crash\",\n      Dragon: \"Devastating Drake\",\n      Electric: \"Gigavolt Havoc\",\n      Water: \"Hydro Vortex\",\n      Fire: \"Inferno Overdrive\",\n      Ghost: \"Never-Ending Nightmare\",\n      Bug: \"Savage Spin-Out\",\n      Psychic: \"Shattered Psyche\",\n      Ice: \"Subzero Slammer\",\n      Flying: \"Supersonic Skystrike\",\n      Ground: \"Tectonic Rage\",\n      Fairy: \"Twinkle Tackle\",\n    };\n    var zMoveVersionTable = {\n      spiritshackle: \"Sinister Arrow Raid\",\n      volttackle: \"Catastropika\",\n      lastresort: \"Extreme Evoboost\",\n      psychic: \"Genesis Supernova\",\n      naturesmadness: \"Guardian of Alola\",\n      darkestlariat: \"Malicious Moonsault\",\n      sparklingaria: \"Oceanic Operetta\",\n      gigaimpact: \"Pulverizing Pancake\",\n      spectralthief: \"Soul-Stealing 7-Star Strike\",\n      thunderbolt: \"Stoked Sparksurfer\",\n      thunderbolt2: \"10,000,000 Volt Thunderbolt\",\n      photongeyser: \"Light That Burns the Sky\",\n      sunsteelstrike: \"Searing Sunraze Smash\",\n      moongeistbeam: \"Menacing Moonraze Maelstrom\",\n      playrough: \"Let's Snuggle Forever\",\n      stoneedge: \"Splintered Stormshards\",\n      clangingscales: \"Clangorous Soulblaze\",\n    };\n    if (!move.isMax && (move.zMovePower || move.zMoveEffect || move.zMoveBoost)) {\n      buf += \"<h3>Z-Move(s)</h3>\";\n      if (move.zMovePower) {\n        buf +=\n          '<p><strong><a href=\"' + Config.baseurl + \"moves/\" + toID(zMoveTable[move.type]) + '\" data-target=\"push\">';\n        buf += zMoveTable[move.type];\n        buf += \"</a></strong>: \";\n        buf += \"\" + move.zMovePower + \" base power, \" + move.category + \"</p>\";\n      }\n      if (move.zMoveBoost) {\n        buf += \"<p><strong>Z-\" + move.name + \"</strong>: \";\n        var isFirst = true;\n        for (var i in move.zMoveBoost) {\n          if (!isFirst) buf += \", \";\n          isFirst = false;\n          buf += \"+\" + move.zMoveBoost[i] + \" \" + (BattleStatNames[i] || i);\n        }\n        buf += \", then uses \" + move.name + \"</p>\";\n      }\n      if (move.zMoveEffect === \"heal\") {\n        buf += \"<p><strong>Z-\" + move.name + \"</strong>: fully heals the user, then uses \" + move.name + \"</p>\";\n      } else if (move.zMoveEffect === \"clearnegativeboost\") {\n        buf +=\n          \"<p><strong>Z-\" +\n          move.name +\n          \"</strong>: clears the user's negative stat boosts, then uses \" +\n          move.name +\n          \"</p>\";\n      } else if (move.zMoveEffect === \"healreplacement\") {\n        buf += \"<p><strong>Z-\" + move.name + \"</strong>: uses \" + move.name + \", then heals the replacement\" + \"</p>\";\n      } else if (move.zMoveEffect === \"crit2\") {\n        buf +=\n          \"<p><strong>Z-\" +\n          move.name +\n          \"</strong>: increases the user's crit rate by 2, then uses \" +\n          move.name +\n          \"</p>\";\n      } else if (move.zMoveEffect === \"redirect\") {\n        buf +=\n          \"<p><strong>Z-\" +\n          move.name +\n          \"</strong>: redirects opponent's moves to the user (like Follow Me) in doubles, then uses \" +\n          move.name +\n          \"</p>\";\n      } else if (move.zMoveEffect === \"curse\") {\n        buf +=\n          \"<p><strong>Z-\" +\n          move.name +\n          \"</strong>: +1 Atk if the user is a ghost, or fully heals the user otherwise, then uses \" +\n          move.name +\n          \"</p>\";\n      }\n      if (id in zMoveVersionTable) {\n        var zMove = getID(BattleMovedex, zMoveVersionTable[id]);\n        buf +=\n          '<p><strong><a href=\"' +\n          Config.baseurl +\n          \"moves/\" +\n          zMove.id +\n          '\" data-target=\"push\">' +\n          zMove.name +\n          \"</a></strong>: \";\n        if (zMove.basePower) {\n          buf += \"\" + zMove.basePower + \" base power, \" + zMove.category + \"</p>\";\n        } else {\n          buf += zMove.shortDesc;\n        }\n        buf += \"</p>\";\n      }\n      if (id + \"2\" in zMoveVersionTable) {\n        var zMove = getID(BattleMovedex, zMoveVersionTable[id + \"2\"]);\n        buf +=\n          '<p><strong><a href=\"' +\n          Config.baseurl +\n          \"moves/\" +\n          zMove.id +\n          '\" data-target=\"push\">' +\n          zMove.name +\n          \"</a></strong>: \";\n        if (zMove.basePower) {\n          buf += \"\" + zMove.basePower + \" base power, \" + zMove.category + \"</p>\";\n        } else {\n          buf += zMove.shortDesc;\n        }\n        buf += \"</p>\";\n      }\n    }\n\n    // Max Move\n    var maxMoveTable = {\n      Poison: \"Ooze\",\n      Fighting: \"Knuckle\",\n      Dark: \"Darkness\",\n      Grass: \"Overgrowth\",\n      Normal: \"Strike\",\n      Rock: \"Rockfall\",\n      Steel: \"Steelspike\",\n      Dragon: \"Wyrmwind\",\n      Electric: \"Lightning\",\n      Water: \"Geyser\",\n      Fire: \"Flare\",\n      Ghost: \"Phantasm\",\n      Bug: \"Flutterby\",\n      Psychic: \"Mindstorm\",\n      Ice: \"Hailstorm\",\n      Flying: \"Airstream\",\n      Ground: \"Quake\",\n      Fairy: \"Starfall\",\n      Status: \"Guard\",\n    };\n    var gmaxMoveTable = {\n      Bug: [\"Befuddle\"],\n      Fire: [\"Centiferno\", \"Wildfire\"],\n      Fighting: [\"Chi Strike\"],\n      Normal: [\"Cuddle\", \"Gold Rush\", \"Replenish\"],\n      Dragon: [\"Depletion\"],\n      Fairy: [\"Finale\", \"Smite\"],\n      Water: [\"Foam Burst\", \"Stonesurge\"],\n      Psychic: [\"Gravitas\"],\n      Poison: [\"Malodor\"],\n      Steel: [\"Meltdown\", \"Steelsurge\"],\n      Ice: [\"Resonance\"],\n      Ground: [\"Sandblast\"],\n      Dark: [\"Snooze\"],\n      Electric: [\"Stun Shock\", \"Volt Crash\"],\n      Grass: [\"Sweetness\", \"Tartness\"],\n      Ghost: [\"Terror\"],\n      Rock: [\"Volcalith\"],\n      Flying: [\"Wind Rage\"],\n    };\n    if (move.gmaxPower && !move.isZ && !move.isMax) {\n      buf += \"<h3>Max Move</h3>\";\n      if (move.category !== \"Status\") {\n        buf +=\n          '<p><strong><a href=\"' +\n          Config.baseurl +\n          \"moves/max\" +\n          toID(maxMoveTable[move.type]) +\n          '\" data-target=\"push\">';\n        buf += \"Max \" + maxMoveTable[move.type];\n        buf += \"</a></strong>: \";\n        buf += \"\" + move.gmaxPower + \" base power, \" + move.category + \"</p>\";\n      } else {\n        buf += '<p><strong><a href=\"' + Config.baseurl + 'moves/maxguard\" data-target=\"push\">';\n        buf += \"Max Guard\";\n        buf += \"</a></strong>\";\n        buf += move.shortDesc;\n      }\n      if (move.type in gmaxMoveTable && move.category !== \"Status\") {\n        for (let i = 0; i < gmaxMoveTable[move.type].length; i++) {\n          var gmaxMove = getID(BattleMovedex, \"gmax\" + gmaxMoveTable[move.type][i]);\n          buf +=\n            '<p>Becomes <strong><a href=\"' +\n            Config.baseurl +\n            \"moves/\" +\n            gmaxMove.id +\n            '\" data-target=\"push\">' +\n            gmaxMove.name +\n            \"</a></strong> \";\n          buf +=\n            'if used by <strong><a href=\"' +\n            Config.baseurl +\n            \"pokemon/\" +\n            gmaxMove.isMax +\n            'gmax\" data-target=\"push\">' +\n            gmaxMove.isMax +\n            \"-Gmax</a></strong>\";\n          if (gmaxMove.isMax === \"Toxtricity\") {\n            buf +=\n              ' or <strong><a href=\"' +\n              Config.baseurl +\n              \"pokemon/\" +\n              gmaxMove.isMax +\n              'lowkeygmax\" data-target=\"push\">' +\n              gmaxMove.isMax +\n              \"-Low-Key-Gmax</a></strong>\";\n          }\n          buf += \"</p>\";\n        }\n      }\n    }\n\n    // distribution\n    buf += '<ul class=\"utilichart metricchart nokbd\">';\n    buf += \"</ul>\";\n\n    buf += \"</div>\";\n\n    this.html(buf);\n\n    setTimeout(this.renderDistribution.bind(this));\n  },\n  getDistribution: function () {\n    var results = [];\n    for (let pokeId in BattlePokedex) {\n      let learnset = getLearnset(pokeId);\n      results = results.concat(\n        learnset\n          .filter((m) => m.move == this.id)\n          .map((m) => {\n            return { poke: pokeId, ...m };\n          }),\n      );\n    }\n    const methods = [\"lvl\", \"tm\", \"tutor\", \"egg\"];\n    results.sort((a, b) => {\n      if (a.how != b.how) return methods.indexOf(a.how) - methods.indexOf(b.how);\n      if (a.how == \"lvl\" && a.level != b.level) return a.level - b.level;\n      return a.poke.localeCompare(b.poke);\n    });\n\n    for (let method of methods) {\n      let index = results.findIndex((r) => r.how == method);\n      if (index < 0) continue;\n      results.splice(index, 0, { start: true, method });\n    }\n\n    return (this.results = results);\n  },\n  renderDistribution: function () {\n    var results = this.getDistribution();\n    this.$chart = this.$(\".utilichart\");\n\n    if (results.length > 1600 / 33) {\n      this.streamLoading = true;\n      this.$el.on(\"scroll\", this.handleScroll.bind(this));\n\n      var panelTop = this.$el.children().offset().top;\n      var panelHeight = this.$el.outerHeight();\n      var chartTop = this.$chart.offset().top;\n      var scrollLoc = (this.scrollLoc = this.$el.scrollTop());\n\n      var start = Math.floor((scrollLoc - (chartTop - panelTop)) / 33 - 35);\n      var end = Math.floor(start + 35 + panelHeight / 33 + 35);\n      if (start < 0) start = 0;\n      if (end > results.length - 1) end = results.length - 1;\n      (this.start = start), (this.end = end);\n\n      // distribution\n      var buf = \"\";\n      for (var i = 0, len = results.length; i < len; i++) {\n        buf += '<li class=\"result\">' + this.renderRow(i, i < start || i > end) + \"</li>\";\n      }\n      this.$chart.html(buf);\n    } else {\n      var buf = \"\";\n      for (var i = 0, len = results.length; i < len; i++) {\n        buf += '<li class=\"result\">' + this.renderRow(i) + \"</li>\";\n      }\n      this.$chart.html(buf);\n    }\n  },\n  renderRow: function (i, offscreen) {\n    var results = this.results;\n    var template = BattlePokedex[results[i].poke];\n    if (results[i].start) {\n      switch (results[i].method) {\n        case \"lvl\": // level-up move\n          return \"<h3>Level-up</h3>\";\n        case \"tm\": // tm/hm\n          return \"<h3>TM/HM</h3>\";\n        case \"tutor\": // tutor\n          return \"<h3>Tutor</h3>\";\n        case \"egg\": // egg move\n          return \"<h3>Egg</h3>\";\n      }\n    } else if (offscreen) {\n      return (\n        \"\" +\n        template.name +\n        \" \" +\n        template.abilities[\"0\"] +\n        \" \" +\n        (template.abilities[\"1\"] || \"\") +\n        \" \" +\n        (template.abilities[\"H\"] || \"\") +\n        \"\"\n      );\n    } else {\n      var desc = \"\";\n      switch (results[i].how) {\n        case \"lvl\": // level-up move\n          desc = results[i].level <= 1 ? \"&ndash;\" : \"<small>L</small>\" + (results[i].level || \"?\");\n          break;\n        case \"tm\": // tm/hm\n          desc = `<span class=\"itemicon\" style=\"margin-top:-3px;${getItemIcon(\"tr01\")}\"></span>`;\n          break;\n        case \"tutor\": // tutor\n          desc =\n            '<img src=\"' +\n            ResourcePrefix +\n            'sprites/tutor.png\" style=\"margin-top:-4px;opacity:.7\" width=\"27\" height=\"26\" alt=\"T\" />';\n          break;\n        case \"egg\": // egg move\n          desc = '<span class=\"picon\" style=\"margin-top:-12px;' + getPokemonIcon(\"egg\") + '\"></span>';\n          break;\n        case \"event\": // event\n          desc = \"!\";\n          break;\n        case \"past\": // past generation\n          desc = \"...\";\n          break;\n      }\n      return BattleSearch.renderTaggedPokemonRowInner(template, desc);\n    }\n  },\n  handleScroll: function () {\n    var scrollLoc = this.$el.scrollTop();\n    if (Math.abs(scrollLoc - this.scrollLoc) > 20 * 33) {\n      this.renderUpdateDistribution();\n    }\n  },\n  debouncedPurgeTimer: null,\n  renderUpdateDistribution: function (fullUpdate) {\n    if (this.debouncedPurgeTimer) {\n      clearTimeout(this.debouncedPurgeTimer);\n      this.debouncedPurgeTimer = null;\n    }\n\n    var panelTop = this.$el.children().offset().top;\n    var panelHeight = this.$el.outerHeight();\n    var chartTop = this.$chart.offset().top;\n    var scrollLoc = (this.scrollLoc = this.$el.scrollTop());\n\n    var results = this.results;\n\n    var rowFit = Math.floor(panelHeight / 33);\n\n    var start = Math.floor((scrollLoc - (chartTop - panelTop)) / 33 - 35);\n    var end = start + 35 + rowFit + 35;\n    if (start < 0) start = 0;\n    if (end > results.length - 1) end = results.length - 1;\n\n    var $rows = this.$chart.children();\n\n    if (fullUpdate || start < this.start - rowFit - 30 || end > this.end + rowFit + 30) {\n      var buf = \"\";\n      for (var i = 0, len = results.length; i < len; i++) {\n        buf += '<li class=\"result\">' + this.renderRow(i, i < start || i > end) + \"</li>\";\n      }\n      this.$chart.html(buf);\n      (this.start = start), (this.end = end);\n      return;\n    }\n\n    if (start < this.start) {\n      for (var i = start; i < this.start; i++) {\n        $rows[i].innerHTML = this.renderRow(i);\n      }\n      this.start = start;\n    }\n\n    if (end > this.end) {\n      for (var i = this.end + 1; i <= end; i++) {\n        $rows[i].innerHTML = this.renderRow(i);\n      }\n      this.end = end;\n    }\n\n    if (this.end - this.start > rowFit + 90) {\n      var self = this;\n      this.debouncedPurgeTimer = setTimeout(function () {\n        self.renderUpdateDistribution(true);\n      }, 1000);\n    }\n  },\n});\n"],"names":["window","PokedexMovePanel","PokedexResultPanel","extend","initialize","id","move","getID","BattleMovedex","toID","shortTitle","name","buf","Config","baseurl","isNonstandard","isMax","isZ","type","category","basePower","accuracy","pp","noPPBoosts","zItem","BattleItems","maxUser","BattlePokedex","priority","escapeHTML","desc","shortDesc","flags","target","zMoveTable","Poison","Fighting","Dark","Grass","Normal","Rock","Steel","Dragon","Electric","Water","Fire","Ghost","Bug","Psychic","Ice","Flying","Ground","Fairy","zMoveVersionTable","spiritshackle","volttackle","lastresort","psychic","naturesmadness","darkestlariat","sparklingaria","gigaimpact","spectralthief","thunderbolt","thunderbolt2","photongeyser","sunsteelstrike","moongeistbeam","playrough","stoneedge","clangingscales","zMovePower","zMoveEffect","zMoveBoost","isFirst","i","BattleStatNames","zMove","maxMoveTable","Status","gmaxMoveTable","gmaxPower","length","gmaxMove","html","setTimeout","renderDistribution","bind","getDistribution","results","pokeId","learnset","getLearnset","concat","filter","m","map","poke","methods","method","sort","a","b","how","indexOf","level","localeCompare","index","findIndex","r","splice","start","$chart","$","streamLoading","$el","on","handleScroll","panelTop","children","offset","top","panelHeight","outerHeight","chartTop","Math","floor","scrollLoc","scrollTop","end","len","renderRow","offscreen","template","abilities","getItemIcon","ResourcePrefix","getPokemonIcon","BattleSearch","renderTaggedPokemonRowInner","abs","renderUpdateDistribution","debouncedPurgeTimer","fullUpdate","clearTimeout","rowFit","$rows","innerHTML","self"],"version":3,"file":"index.b47b3add.js.map"}