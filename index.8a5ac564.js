window.PokedexPokemonPanel=PokedexResultPanel.extend({initialize:function(e){e=toID(e);var t,a=BattlePokedex[e];this.id=e,this.shortTitle=a.baseSpecies;var s='<div class="pfx-body dexentry">';s+=`<a href="${Config.baseurl}" class="pfx-backbutton" data-target="back"><i class="fa fa-chevron-left"></i> Pok&eacute;dex</a><h1>`,a.forme?s+=`<a href="${Config.baseurl}pokemon/${e}" data-target="push" class="subtle">${a.baseSpecies}<small>-${a.forme}</small></a>`:s+=`<a href="${Config.baseurl}pokemon/${e}" data-target="push" class="subtle">${a.name}</a>`,a.num>0&&(s+=` <code>#${a.num}</code>`),s+="</h1>",a.unusable&&(s+='<div class="warning"><strong>Note:</strong> This Pok&eacute;mon is not available.</div>'),s+=`<img src="${ResourcePrefix}sprites/gen5/${e}.png" alt="" width="96" height="96" class="sprite" /><dl class="typeentry"><dt>Types:</dt> <dd>`;for(var l=0;l<a.types.length;l++)s+=`<a class="type ${toID(a.types[l])}" href="${Config.baseurl}types/${toID(a.types[l])}" data-target="push">${a.types[l]}</a> `;s+='</dd></dl><dl class="sizeentry"><dt>Size:</dt> <dd>';var r=(t=a.weightkg)>=200?120:t>=100?100:t>=50?80:t>=25?60:t>=10?40:20;for(var l in s+=`${a.heightm} m, ${a.weightkg} kg<br /><small><a class="subtle" href="${Config.baseurl}moves/grassknot" data-target="push">Grass Knot</a>: ${r}</small></dd></dl><dl class="abilityentry"><dt>Abilities:</dt> <dd class="imgentry">`,a.abilities){var i=a.abilities[l];i&&("0"!==l&&(s+=" | "),"H"===l&&(i=`<em>${a.abilities[l]}</em>`),s+=`<a href="${Config.baseurl}abilities/${toID(a.abilities[l])}" data-target="push">${i}</a>`,"H"===l&&(s+="<small> (H)</small>"),"S"===l&&(s+="<small> (special)</small>"))}var o={hp:"HP",atk:"Attack",def:"Defense",spa:"Sp. Atk",spd:"Sp. Def",spe:"Speed"};s+='</dd></dl><dl><dt style="clear:left">Base stats:</dt><dd><table class="stats"><tr><td></td><td></td><td style="width:200px"></td><th class="ministat"><abbr title="0 IVs, 0 EVs, negative nature">min&minus;</a></th><th class="ministat"><abbr title="31 IVs, 0 EVs, neutral nature">min</abbr></th><th class="ministat"><abbr title="31 IVs, 252 EVs, neutral nature">max</abbr></th><th class="ministat"><abbr title="31 IVs, 252 EVs, positive nature">max+</abbr></th>';var d=0;for(var n in BattleStatNames){var h=a.baseStats[n];d+=h;var c=Math.floor(200*h/200);c>200&&(c=200);var m=Math.floor(180*h/255);m>360&&(m=360),s+=`<tr><th>${o[n]}:</th><td class="stat">${h}</td><td class="statbar"><span style="width:${Math.floor(c)}px;background:hsl(${m},85%,45%);border-color:hsl(${m},75%,35%)"></span></td>`+('<td class="ministat"><small>'+("hp"===n?"":this.getStat(h,!1,100,0,0,.9))+'</small></td><td class="ministat"><small>')+this.getStat(h,"hp"===n,100,31,0,1)+"</small></td>"+('<td class="ministat"><small>'+this.getStat(h,"hp"===n,100,31,255,1)+'</small></td><td class="ministat"><small>')+("hp"===n?"":this.getStat(h,!1,100,31,255,1.1))+"</small></td></tr>"}s+=`<tr><th class="bst">Total:</th><td class="bst">${d}</td><td></td><td class="ministat" colspan="4">at level <input type="text" class="textbox" name="level" placeholder="100" size="5" /></td></table></dd><dt>Evolution:</dt> <dd>`;for(var g=a;g.prevo;)g=getID(BattlePokedex,g.prevo);if(g.evos){s+='<table class="evos"><tr><td>';for(var p=[g];p.length>0;){for(var u=[],l=0;l<p.length;l++){var v=(g=p[l]).forme?g.baseSpecies+`<small>-${g.forme}</small>`:g.name;for(let e of(v=`<span class="picon" style="${getPokemonIcon(g)}"></span>`+v,g===a?s+=`<div><strong>${v}</strong></div>`:s+=`<div><a href="${Config.baseurl}pokemon/${g.id}" data-target="replace">${v}</a></div>`,g.evos??[]))u.find(t=>t.target==e.target)||u.push(e)}(p=u.map(e=>getID(BattlePokedex,e.target))).length>0&&(s+='</td><td class="arrow"><span>&rarr;</span></td><td>')}if(s+="</td></tr></table>",a.prevo)for(let e of getID(BattlePokedex,a.prevo).evos.filter(e=>toID(e.target)==a.id))s+=`<div><small>Evolves from ${getID(BattlePokedex,a.prevo).name} (${this.getEvoMethod(e)})</small></div>`;if(a.evos)for(let e of a.evos)s+=`<div><small>Evolves into ${getID(BattlePokedex,e.target).name} (${this.getEvoMethod(e)})</small></div>`}else s+="<em>Does not evolve</em>";if(a.formes){s+="</dd><dt>Formes:</dt> <dd>";for(var f=a.formes,l=0;l<f.length;l++)if(g=getID(BattlePokedex,f[l])){var v=g.forme||"Base";v=`<span class="picon" style="${getPokemonIcon(g)}"></span>`+v,l>0&&(s+=", "),g===a?s+=`<strong>${v}</strong>`:s+=`<a href="${Config.baseurl}pokemon/${g.id}" data-target="replace">${v}</a>`}a.requiredItem&&(s+=`<div><small>Must hold <a href="${Config.baseurl}items/${toID(g.requiredItem)}" data-target="push">${g.requiredItem}</a></small></div>`)}if(a.cosmeticFormes){s+="</dd><dt>Cosmetic formes:</dt> <dd>"+(v=`<span class="picon" style="${getPokemonIcon(a)}"></span>`+(a.forme??"Base"));for(var l=0;l<a.cosmeticFormes.length;l++)s+=","+(v=`<span class="picon" style="${getPokemonIcon(a.name+"-"+a.cosmeticFormes[l])}"></span>`+a.cosmeticFormes[l])}if(s+="</dd></dl>",a.eggGroups){if(s+='<dl class="colentry"><dt>Egg groups:</dt><dd><span class="picon" style="margin-top:-12px;'+getPokemonIcon("egg")+`"></span><a href="${Config.baseurl}egggroups/`+a.eggGroups.map(toID).join("+")+'" data-target="push">'+a.eggGroups.join(", ")+'</a></dd></dl><dl class="colentry"><dt>Gender ratio:</dt><dd>',a.gender)switch(a.gender){case"M":s+="100% male";break;case"F":s+="100% female";break;case"N":s+="100% genderless"}else a.genderRatio?s+=`${100*a.genderRatio.M}% male, ${100*a.genderRatio.F}% female`:s+="50% male, 50% female";s+='</dd></dl><div style="clear:left"></div>'}s+='<ul class="utilichart nokbd"><li class="resultheader"><h3>Level-up</h3></li></ul></div>',this.html(s),setTimeout(this.renderFullLearnset.bind(this))},events:{"click .tabbar button":"selectTab","input input[name=level]":"updateLevel","keyup input[name=level]":"updateLevel","change input[name=level]":"updateLevel"},updateLevel:function(e){var t=this.$("input[name=level]").val(),a=""===t?100:parseInt(t,10),s=31,l=255;":"===t.slice(-1)&&(s=0,l=0);var r=0,i=this.$("table.stats td.ministat small"),o=getID(BattlePokedex,this.id);for(var d in BattleStatNames){var n=o.baseStats[d];i.eq(4*r+0).text("hp"===d?"":this.getStat(n,!1,a,0,0,.9)),i.eq(4*r+1).text(this.getStat(n,"hp"===d,a,s,0,1)),i.eq(4*r+2).text(this.getStat(n,"hp"===d,a,31,l,1)),i.eq(4*r+3).text("hp"===d?"":this.getStat(n,!1,a,31,l,1.1)),r++}},getEvoMethod:function(e){switch(e.condition){case void 0:if(e.level)return"level "+e.level;if(e.item)return"use "+e.item;return"unknown";case"trade":return"When traded";case"friendship":return"High Friendship";default:return e.condition}},selectTab:function(e){this.$(".tabbar button").removeClass("cur"),$(e.currentTarget).addClass("cur"),"move"===e.currentTarget.value&&this.renderFullLearnset()},renderFullLearnset:function(){getID(BattlePokedex,this.id);var e,t=getLearnset(this.id),a="",s="";for(let r of t){let t=BattleMovedex[r.move];if(!t){a+=`<li><pre>error: "${r.move}"</pre></li>`;continue}var l=void 0==e||e.how!=r.how;switch(r.how){case"lvl":l&&(a+='<li class="resultheader"><h3>Level-up</h3></li>');let i=r.level;s=i<=1?"&ndash;":"<small>L</small>"+i;break;case"prevo":l&&(a+='<li class="resultheader"><h3>From preevo</h3></li>'),s="";break;case"tm":l&&(a+='<li class="resultheader"><h3>TM/HM</h3></li>'),s=`<span class="itemicon" style="margin-top:-3px;${getItemIcon("tr01")}"></span>`;break;case"tutor":l&&(a+='<li class="resultheader"><h3>Tutor</h3></li>'),s=`<img src="${ResourcePrefix}sprites/tutor.png" style="margin-top:-4px;opacity:.7" width="27" height="26" alt="T" />`;break;case"egg":l&&(a+='<li class="resultheader"><h3>Egg</h3></li>'),s='<span class="picon" style="margin-top:-12px;'+getPokemonIcon("egg")+'"></span>'}e=r,a+=BattleSearch.renderTaggedMoveRow(t,s)}this.$(".utilichart").html(a)},getStat:function(e,t,a,s,l,r){if(t)return 1===e?1:Math.floor(Math.floor(2*e+(s||0)+Math.floor((l||0)/4)+100)*a/100+10);var i=Math.floor(Math.floor(2*e+(s||0)+Math.floor((l||0)/4))*a/100+5);return r&&!t&&(i*=r),Math.floor(i)}});
//# sourceMappingURL=index.8a5ac564.js.map
